<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PublicHoliday</name>
    </assembly>
    <members>
        <member name="T:PublicHoliday.AustraliaPublicHoliday">
            <summary>
            Holidays in Austria http://www.australia.gov.au/about-australia/special-dates-and-events/public-holidays
            </summary>
            <remarks>
            Missing because no fixed date:
            * For Victoria, AFL Grand Final Day
            * For Western Australia, Queen's Birthday (we assume end September BUT Governor may change)
            </remarks>
        </member>
        <member name="P:PublicHoliday.AustraliaPublicHoliday.State">
            <summary>
            Gets or sets the state (ISO 3166-2:AU), + default All for all states.
            </summary>
        </member>
        <member name="T:PublicHoliday.AustraliaPublicHoliday.States">
             <summary>
            
             </summary>
        </member>
        <member name="F:PublicHoliday.AustraliaPublicHoliday.States.All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:PublicHoliday.AustraliaPublicHoliday.States.ACT">
            <summary>
            Australian Capital Territory
            </summary>
        </member>
        <member name="F:PublicHoliday.AustraliaPublicHoliday.States.NSW">
            <summary>
            New South Wales
            </summary>
        </member>
        <member name="F:PublicHoliday.AustraliaPublicHoliday.States.NT">
            <summary>
            Northern Territory
            </summary>
        </member>
        <member name="F:PublicHoliday.AustraliaPublicHoliday.States.QLD">
            <summary>
            Queensland
            </summary>
        </member>
        <member name="F:PublicHoliday.AustraliaPublicHoliday.States.SA">
            <summary>
            South Australia
            </summary>
        </member>
        <member name="F:PublicHoliday.AustraliaPublicHoliday.States.TAS">
            <summary>
            Tasmania
            </summary>
        </member>
        <member name="F:PublicHoliday.AustraliaPublicHoliday.States.VIC">
            <summary>
            Victoria
            </summary>
        </member>
        <member name="F:PublicHoliday.AustraliaPublicHoliday.States.WA">
            <summary>
            Western Australia
            </summary>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.NewYear(System.Int32)">
            <summary>
            New Year's Day
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.AustraliaDay(System.Int32)">
            <summary>
            Australia Day January 26
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.GoodFriday(System.Int32)">
            <summary>
            Good Friday (Friday before Easter)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Easter Monday
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.LabourDay(System.Int32,PublicHoliday.AustraliaPublicHoliday.States)">
            <summary>
            Labour Day
            </summary>
            <param name="year">The year.</param>
            <param name="state">The state.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">You must specify one of the states/territories - state</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">state - No such state</exception>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.AnzacDay(System.Int32)">
            <summary>
            ANZAC day, 25th April
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.AnzacDay(System.Int32,PublicHoliday.AustraliaPublicHoliday.States)">
            <summary>
            ANZAC day, 25th April, adjusted if on weekends (specific states only)
            </summary>
            <param name="year">The year.</param>
            <param name="state">The state.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.CanberraDay(System.Int32)">
            <summary>
            Canberra Day, 2nd Monday of March
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.WesternAustraliaDay(System.Int32)">
            <summary>
            Western Australia Day, 1st Monday of June
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.PicnicDay(System.Int32)">
            <summary>
            Picnic Day (Northern Territory only), first Monday of August
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.FamilyAndCommunityDay(System.Int32)">
            <summary>
            Family  and community day, Australian Capital Territory.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.KingBirthday(System.Int32,PublicHoliday.AustraliaPublicHoliday.States)">
            <summary>
            King's Birthday (varies by state)  (before 2023 <see cref="M:PublicHoliday.AustraliaPublicHoliday.QueenBirthday(System.Int32,PublicHoliday.AustraliaPublicHoliday.States)"/>)
            </summary>
            <param name="year">The year.</param>
            <param name="state">The state.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">You must specify one of the states/territories - state</exception>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.QueenBirthday(System.Int32,PublicHoliday.AustraliaPublicHoliday.States)">
            <summary>
            Queen's Birthday (varies by state)  (from 2023 <see cref="M:PublicHoliday.AustraliaPublicHoliday.KingBirthday(System.Int32,PublicHoliday.AustraliaPublicHoliday.States)"/>; retained for API backwards compatibility)
            </summary>
            <param name="year">The year.</param>
            <param name="state">The state.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">You must specify one of the states/territories - state</exception>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.MelbourneCup(System.Int32)">
            <summary>
            Melbourne Cup (most of Victoria)- first Tuesday of November
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.Christmas(System.Int32)">
            <summary>
            Christmas
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.BoxingDay(System.Int32)">
            <summary>
            Boxing Day
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Lëtzebuergesch.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.AustraliaPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.AustriaPublicHoliday">
            <summary>
            Holidays in Austria
            </summary>
        </member>
        <member name="M:PublicHoliday.AustriaPublicHoliday.NewYear(System.Int32)">
            <summary>
            Neujahr - New Year's Day
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.AustriaPublicHoliday.Epiphany(System.Int32)">
            <summary>
            Heilige Drei Könige Epiphany January 6
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.AustriaPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Ostermontag - Easter Monday
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.AustriaPublicHoliday.LabourDay(System.Int32)">
            <summary>
            Staatsfeiertag - Labour Day
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.AustriaPublicHoliday.Ascension(System.Int32)">
            <summary>
            Christi Himmelfahrt - Ascension
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.AustriaPublicHoliday.PentecostMonday(System.Int32)">
            <summary>
            Pfingstmontag - Pentecost
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.AustriaPublicHoliday.CorpusChristi(System.Int32)">
            <summary>
            Fronleichnam - CorpusChristi
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.AustriaPublicHoliday.Assumption(System.Int32)">
            <summary>
            Mariä Himmelfahrt - Assumption of Mary
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.AustriaPublicHoliday.NationalDay(System.Int32)">
            <summary>
            Nationalfeiertag - National Day
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.AustriaPublicHoliday.AllSaints(System.Int32)">
            <summary>
            Allerheiligen - All Saints
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.AustriaPublicHoliday.ImmaculateConception(System.Int32)">
            <summary>
            Mariä Empfängnis - Immaculate Conception
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.AustriaPublicHoliday.Christmas(System.Int32)">
            <summary>
            Christtag - Christmas
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.AustriaPublicHoliday.StStephen(System.Int32)">
            <summary>
            Stefanitag - St Stephen's Day
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.AustriaPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.AustriaPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in German.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.AustriaPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.BelgiumPublicHoliday">
            <summary>
            Finds Belgium public holidays. 
            Public holidays on Sundays are not deferred to following weekday automatically- 
            they may be taken at an arbitary date.
            </summary>
            <remarks>
            Strictly Easter Sunday is also a public holiday
            </remarks>
        </member>
        <member name="M:PublicHoliday.BelgiumPublicHoliday.NewYear(System.Int32)">
            <summary>
            New Year's Day January 1 Nieuwjaar / Nouvel An 
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BelgiumPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Easter Monday 1st Monday after Easter Paasmaandag / Lundi de Pâques
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BelgiumPublicHoliday.MayDay(System.Int32)">
            <summary>
            Mays the day.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BelgiumPublicHoliday.Ascension(System.Int32)">
            <summary>
            Ascension 6th Thursday after Easter- Hemelvaartsdag / Ascension
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BelgiumPublicHoliday.PentecostMonday(System.Int32)">
            <summary>
            Whit Monday - Pentecost Monday 7th Monday after Easter Pinkstermaandag / Lundi de Pentecôte
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BelgiumPublicHoliday.National(System.Int32)">
            <summary>
            National holiday July 21 Nationale feestdag / Fête nationale
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BelgiumPublicHoliday.Assumption(System.Int32)">
            <summary>
            Assumption of Mary August 15 Onze Lieve Vrouw hemelvaart / Assomption
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BelgiumPublicHoliday.AllSaints(System.Int32)">
            <summary>
            All Saints November 1 Allerheiligen / Toussaint 
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BelgiumPublicHoliday.Armistice(System.Int32)">
            <summary>
            Armistice Day November 11 Wapenstilstand / Jour de l'armistice
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BelgiumPublicHoliday.Christmas(System.Int32)">
            <summary>
            Christmas December 25  Kerstmis / Noël
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BelgiumPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.BelgiumPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Dutch.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BelgiumPublicHoliday.PublicHolidayNamesFrench(System.Int32)">
            <summary>
            Public holiday names in French.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BelgiumPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.BrazilPublicHoliday">
            <summary>
            Public holidays for Brazil
            </summary>
        </member>
        <member name="M:PublicHoliday.BrazilPublicHoliday.AnoNovo(System.Int32)">
            <summary>
            New Year's Day (Ano Novo) - January 1st
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BrazilPublicHoliday.CarnavalDayOne(System.Int32)">
            <summary>
            Carnival(Carnaval) - Even though carnaval takes 5 days. Brazil national holidays for carnival are monday and tuesday.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BrazilPublicHoliday.CarnavalDayTwo(System.Int32)">
            <summary>
            Carnival(Carnaval) - Even though carnaval takes 5 days. Brazil national holidays for carnival are monday and tuesday.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BrazilPublicHoliday.SextaFeiraSanta(System.Int32)">
            <summary>
            Good Friday(Sexta-feira Santa) - Date varies(the Friday before Easter Sunday, observed by Christians)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BrazilPublicHoliday.Tiradentes(System.Int32)">
            <summary>
            Tiradentes Day(Dia de Tiradentes) - April 21st(commemorating the execution of Joaquim José da Silva Xavier, a leading figure in the Brazilian independence movement)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BrazilPublicHoliday.DiaDoTrabalho(System.Int32)">
            <summary>
            Labor Day(Dia do Trabalho) - May 1st
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BrazilPublicHoliday.CorpusChristi(System.Int32)">
            <summary>
            Corpus Christi - Date varies(celebrated on the Thursday after Trinity Sunday, honoring the Eucharist)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BrazilPublicHoliday.DiaDaIndependencia(System.Int32)">
            <summary>
            Independence Day(Dia da Independência) - September 7th(commemorating Brazil's declaration of independence from Portugal in 1822)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BrazilPublicHoliday.NossaSenhoraAparecida(System.Int32)">
            <summary>
            Our Lady of Aparecida Day (Dia de Nossa Senhora Aparecida) - October 12th(honoring Brazil's patron saint, Our Lady of Aparecida)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BrazilPublicHoliday.DiaDosFinados(System.Int32)">
            <summary>
            All Souls' Day (Dia de Finados) - November 2nd (a day to honor and remember the deceased)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BrazilPublicHoliday.DiaDaRepublica(System.Int32)">
            <summary>
            Republic Day (Dia da República) - November 15th(commemorating the establishment of the Brazilian republic in 1889)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BrazilPublicHoliday.Natal(System.Int32)">
            <summary>
            Christmas Day(Natal) - December 25th
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BrazilPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BrazilPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Portuguese.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.BrazilPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="T:PublicHoliday.CanadaPublicHoliday">
            <summary>
            Finds Canada federal public (statutory) Holidays. Adjusted for weekends.
            <description>
            Federally regulated workers are entitled to nine paid statutory holidays every year –
            New Year’s Day, Good Friday, Victoria Day, Canada Day, Labour Day, Thanksgiving Day, Remembrance Day, Christmas Day, and Boxing Day.
            See http://www.hrsdc.gc.ca/eng/labour/overviews/employment_standards/holidays.shtml
            <para>When New Year’s Day, Canada Day, Remembrance Day, Christmas Day or Boxing Day fall on a Saturday or Sunday that are not normal work days, workers are entitled to a holiday with pay on the working day immediately before or after the holiday</para>
            <para>There are additional regional and provincal dates, and not all federal holidays may be observed by private businesses. Banks follow the federal holidays, however.</para>
            </description>
            </summary>
            <remarks>
            Federal nation-wide holidays only. Provincial holidays (eg Family Day in Feb) are excluded and are not observed by Federal employees.
            </remarks>
        </member>
        <member name="P:PublicHoliday.CanadaPublicHoliday.Province">
            <summary>
            The province
            </summary>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.NewYear(System.Int32)">
            <summary>
            Date of New Year bank holiday.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.FamilyDay(System.Int32,System.String)">
            <summary>
            Family day (3rd monday of February) (2nd monday for BC)
            </summary>
            <param name="year"></param>
            <param name="province"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.HasFamilyDay(System.Int32,System.String)">
            <summary>
            Determines if a province has Family day
            </summary>
            <param name="year"></param>
            <param name="province"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.StPatricksDay(System.Int32)">
            <summary>
            St. Patricks day (March 17)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.HasStPatricksDay(System.String)">
            <summary>
            Determines if a province has st. Patricks day
            </summary>
            <param name="province"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.GoodFriday(System.Int32)">
            <summary>
            Good Friday (Friday before Easter)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Easter Monday (Monday after Easter)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.HasEasterMonday(System.String)">
            <summary>
            Determines if a province has Easter Monday
            </summary>
            <param name="province"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.GoodFriday(System.DateTime)">
            <summary>
            Private overloads of GoodFriday and EasterMonday reusing Easter calculation
            </summary>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.StGeorgesDay(System.Int32)">
            <summary>
            Saint George's day (April 23)
            </summary>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.HasStGeorgesDay(System.String)">
            <summary>
            Determines if a province has Saint Georges day
            </summary>
            <param name="province"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.VictoriaDay(System.Int32)">
            <summary>
            Monday on or before May 24
            </summary>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.HasVictoriaDay(System.String)">
            <summary>
            Determines if a province has Victoria day
            </summary>
            <param name="province"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.AboriginalDay(System.Int32)">
            <summary>
            Aboriginal day (June 21)
            </summary>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.HasAboriginalDay(System.String)">
            <summary>
            Determines if a province has Aboriginal day
            </summary>
            <param name="province"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.NationalHoliday(System.Int32)">
            <summary>
            National holiday (June 24)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.HasNationalHoliday(System.String)">
            <summary>
            Determines if a province has National holiday
            </summary>
            <param name="province"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.CanadaDay(System.Int32)">
            <summary>
            Canada day, 1 July or following Monday 
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.OrangemensDay(System.Int32)">
            <summary>
            Orangemen's day (July 12)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.HasOrangemensDay(System.String)">
            <summary>
            Determines if a province has Orangemen's day
            </summary>
            <param name="province"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.CivicHoliday(System.Int32)">
            <summary>
            First Monday in August. Only available in certain provinces, under different names- Saskatchewan day,  Regatta Day 
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.HasCivicHoliday(System.String)">
            <summary>
            Determines if a province has a civic holiday
            </summary>
            <param name="province"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.GoldCupParadeDay(System.Int32)">
            <summary>
            Gold Cup Parade day (Third friday in August)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.HasGoldCupParadeDay(System.String)">
            <summary>
            Determines if a province has Gold Cup Parade day
            </summary>
            <param name="province"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.DiscoveryDay(System.Int32)">
            <summary>
            Discovery day (Third monday in August)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.HasDiscoveryDay(System.String)">
            <summary>
            Determines if a province has Discovery day
            </summary>
            <param name="province"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.LabourDay(System.Int32)">
            <summary>
            First Monday in September
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.NationalDayForTruthAndReconciliation(System.Int32)">
            <summary>
            30th September from 2021 onwards
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.Thanksgiving(System.Int32)">
            <summary>
            Second Monday in October
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.RemembranceDay(System.Int32)">
            <summary>
            November 11
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.HasRememberanceDay(System.String)">
            <summary>
            Determines if a province has a Rememberance day
            </summary>
            <param name="province"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.Christmas(System.Int32)">
            <summary>
            Christmas day
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.BoxingDay(System.Int32)">
            <summary>
            Boxing Day
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.HasBoxingDay(System.String)">
            <summary>
            Determines if a province has a Boxing day
            </summary>
            <param name="province"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of bank holidays</returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>Dictionary of bank holidays</returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>
            True if date is a public holiday (excluding weekends)
            </returns>
        </member>
        <member name="M:PublicHoliday.CanadaPublicHoliday.#ctor(System.String)">
            <summary>
            Constructor with province option
            </summary>
            <param name="province"></param>
        </member>
        <member name="T:PublicHoliday.CanadaQuebecGovClosingDay">
            <summary>
            Finds Governement of Quebec (statutory) Holidays. Adjusted for weekends.
            <description>
            Governement of Quebec regulated workers are entitled to thirteen paid statutory holidays every year.
            <para>When New Year’s Day or Christmas fall on a Saturday or Sunday that are not normal work days, workers are entitled to a holiday with pay on the working day immediately after the holiday</para>
            <para>When National Holiday or Canada Day fall on a Saturday or Sunday that are not normal work days, workers are entitled to a holiday with pay on the working day immediately before for saturday or immediately after for the sunday the holiday</para>
            </description>
            </summary>
            <remarks>
            Recommendation to use cache with UseCachingHolidays for performance 
            </remarks>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.NewYear(System.Int32)">
            <summary>
            Date of New Year bank holiday.
            </summary>
            <param name="year"></param>
            <returns></returns>
            <remarks>If weekend, after.</remarks>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.DayAfterNewYear(System.Int32)">
            <summary>
            Day After New Year
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.GoodFriday(System.Int32)">
            <summary>
            Good Friday (Friday before Easter)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.EasterMonday(System.Int32)">
            <summary>
            Easter Monday (Monday after Easter)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.GoodFriday(System.DateTime)">
            <summary>
            Private overloads of GoodFriday and EasterMonday reusing Easter calculation
            </summary>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.NationalPatriotDay(System.Int32)">
            <summary>
            Monday on or before May 24
            </summary>
            <param name="year"></param>
            <returns></returns>
            <remarks>Before 2003 DollardDay.</remarks>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.NationalHoliday(System.Int32)">
            <summary>
            National holiday (June 24)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.CanadaDay(System.Int32)">
            <summary>
            Canada day, 1 July or following Monday 
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.LabourDay(System.Int32)">
            <summary>
            First Monday in September
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.Thanksgiving(System.Int32)">
            <summary>
            Second Monday in October
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.DayBeforeChristmas(System.Int32)">
            <summary>
            Day Before Christmas
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.Christmas(System.Int32)">
            <summary>
            Christmas day
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.DayAfterChristmas(System.Int32)">
            <summary>
            Day After Christmas
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.DayBeforeNewYear(System.Int32)">
            <summary>
            Day Before Christmas
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of bank holidays</returns>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.PublicHolidayNames(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>Dictionary of bank holidays</returns>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.PublicHolidayNamesCulture(System.Int32,System.Globalization.CultureInfo)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <param name="culture">Culture to use for get the name</param>
            <returns>Dictionary of bank holidays</returns>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.PublicHolidaysInformation(System.Int32)">
            <summary>
            Gets a list of public holidays with their observed and actual date
            </summary>
            <param name="year">The given year</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.PublicHolidaysComplete(System.Int32)">
            <summary>
            Gets a list of public holidays with their observed and actual date
            </summary>
            <param name="year">The given year</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.PublicHolidaysInformationWithNames(System.Int32)">
            <summary>
            Gets a list of public holidays with their observed and actual date with names
            </summary>
            <param name="year">The given year</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CanadaQuebecGovClosingDay.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>
            True if date is a public holiday (excluding weekends)
            </returns>
        </member>
        <member name="T:PublicHoliday.CzechRepublicPublicHoliday">
            <summary>
            Holidays in Czech Republic
            Based on czech holiday law
            also from historical "holiday law" during Czechoslovakia: 248/1946
            </summary>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.NewYear(System.Int32)">
            <summary>
            Nový rok - New Year's Day
            In 1994 there is another holiday this day, but this is still valid
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.EstablishmentDay(System.Int32)">
            <summary>
            Den obnovy samostatného českého státu - Day of the establishment of independent Czech state
            Czechoslovakia split into the Czech Republic and Slovakia
            since 1994, but New Year's day is also valid in Czech Republic
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.Epiphany(System.Int32)">
            <summary>
            Svátek Tří králů - Epiphany (The Three Magi)
            Christian holiday in old times 
            until 1951, since 1952 is not a holiday in Czech republic
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.GoodFriday(System.Int32)">
            <summary>
            Velký pátek - Good Friday
            Valid between 1947 and 1951 (including), then cancelled and was introduced again since 2016
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Pondělí Velikonoční - Easter Monday
            introduced in 1939, cancelled in 1946, then restored again in 1949
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.WorkersDay(System.Int32)">
            <summary>
            Svátek práce - International Workers' Day
            since 1952
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.VictoryWWIIDay(System.Int32)">
            <summary>
            Den osvobození - Day of victory over fascism
            The end of World War II in Europe; initially celebrated one day later
            valid since 1992
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.LiberationDay(System.Int32)">
            <summary>
            Výročí osvobození Československa Sovětskou armádou - Day of liberation of Czechoslovakia by Soviet army
            The end of World War II in Europe; initially celebrated on this day (because in Moscow time it was on 9th May)
            introduced in 1952, valid until 1991
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.Ascension(System.Int32)">
            <summary>
            Nanebevstoupení Páně - Ascension
            <para>Christian historical holiday</para>
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.PentecostMonday(System.Int32)">
            <summary>
            Pondělí Svatodušní - Pentecost
            <para>Christian historical holiday</para>
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.CorpusChristi(System.Int32)">
            <summary>
            Božího Těla - CorpusChristi
            <para>Christian historical holiday</para>
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.SaintPeterAndPaul(System.Int32)">
            <summary>
            Sv. apoštolů Petra a Pavla - Feast of Saints Peter and Paul
            <para>Christian historical holiday</para>
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.CyrilAndMethodius(System.Int32)">
            <summary>
            Den slovanských věrozvěstů Cyrila a Metoděje - St. Cyril and Methodius Day
            Slavic missionaries Cyril (Constantine) and Metod (Methodius) came to Great Moravia (see also Glagolitic alphabet)
            introduced in 1990
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.BurningJanHus(System.Int32)">
            <summary>
            Burning at Stake of Jan Hus
            <para>Introduced in 2000 (by law after this holiday), valid since 2001</para>
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.Assumption(System.Int32)">
            <summary>
            Nanebevzetí Panny Marie - Assumption of Mary
            <para>Christian historical holiday</para>
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.CzechStatehoodDay(System.Int32)">
            <summary>
            Den české státnosti - Czech Statehood Day
            introduced in 2000 (245/2000 Sb.)
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.NationalizationDay(System.Int32)">
            <summary>
            Den znárodnění - Nationalization Day
            Old public holiday during the communist era: 1952-1974
            introduced in 1952 (by 93/1951 Sb.), cancelled in 1975 (last holiday was 1974)
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.IndependentCzechoSlovakiaDay(System.Int32)">
            <summary>
            Den vzniku samostatného československého státu - Day of Establishment of Independent Czecho-Slovak state
            introduced in 1988
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.AllSaints(System.Int32)">
            <summary>
            Svátek Všech Svatých - All Saints’ Day
            Cancelled since 1952
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.FreedomDemocracyDay(System.Int32)">
            <summary>
            Den boje za svobodu a demokracii - Struggle for Freedom and Democracy Day
            Commemorating the student demonstration against Nazi occupation in 1939, 
            and especially the demonstration in 1989 in Bratislava and Prague 
            considered to mark the beginning of the Velvet Revolution.
            valid since 2000, since the new law (245/2000 Sb.) was introduced , replacing the old law 93/1951 Sb.
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.ImmaculateConception(System.Int32)">
            <summary>
            Sv. Neposkvrněného Početí Panny Marie - Immaculate Conception
            <para>Historical holiday</para>
            </summary>
            <para>Christian historical holiday</para>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.ChristmasEve(System.Int32)">
            <summary>
            Štědrý den - Christmas Eve
            Valid since 1990, before that it was not a public holiday
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.ChristmasDay(System.Int32)">
            <summary>
            První svátek vánoční - Christmas Day - 1st day of Christmas
            Literally, First Christmas Holiday
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.StStephenDay(System.Int32)">
            <summary>
            Druhý svátek vánoční - St. Stephen's Day - 2nd day of Christmas
            Literally, Second Christmas Holiday
            in the older law it was named as "Hod Boží vánoční"
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Czech.
            Names are used directly from law (245/2000, 93/1951 and the older ones)
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.CzechRepublicPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.DenmarkPublicHoliday">
            <summary>
            Holidays in Denmark
            </summary>
            <seealso cref="T:PublicHoliday.PublicHolidayBase" />
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.#ctor">
            <summary>
            Default- includes Constitution Day and Labour Day
            </summary>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Specify whether to include Constitution Day and Labour Day
            </summary>
            <param name="includeConstitutionDay"></param>
            <param name="includeLabourDay"></param>
            <param name="includeDayAfterAscension">Set true if day after Ascension should be considered a holiday</param>
            <param name="includeChristmasEve">Set true if Christmas Eve should be considered a holiday</param>
            <param name="includeNewYearsEve">Set true if New Year's Eve should be considered a holiday</param>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.NewYear(System.Int32)">
            <summary>
            New Year's Day January 1
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.MaundyThursday(System.Int32)">
            <summary>
            Maundy Thursday - Thursday before Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.GoodFriday(System.Int32)">
            <summary>
            Good Friday - Friday before Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.Easter(System.Int32)">
            <summary>
            Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Easter Monday 1st Monday after Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.LabourDay(System.Int32)">
            <summary>
            Labour Day - Mai 1st
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.ConstitutionDay(System.Int32)">
            <summary>
            Constitution Day - June 5th
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.Ascension(System.Int32)">
            <summary>
            Ascension 6th Thursday after Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.DayAfterAscension(System.DateTime)">
            <summary>
             The day after Ascension is a Bankholiday
            </summary>
            <param name="ascension"> The date of ascention.</param>
            
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.DayAfterAscension(System.Int32)">
            <summary>
             The day after Ascension is a Bankholiday
            </summary>
            <param name="year"> year of query</param>
            
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.GeneralPrayerDay(System.Int32)">
            <summary>
            Store bededag, General Prayer Day 4th Friday after Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.WhitSunday(System.Int32)">
            <summary>
            Whit Monday - 7th Sunday after Easter
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.WhitMonday(System.Int32)">
            <summary>
            Whit Monday - 7th Monday after Easter
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.ChristmasEve(System.Int32)">
            <summary>
            ChristmasEve - December 24 - is a Bankholiday
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.Christmas(System.Int32)">
            <summary>
            Christmas - December 25
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.BoxingDay(System.Int32)">
            <summary>
            Boxing Day - December 26
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.NewYearsEve(System.Int32)">
            <summary>
            NewYearsEve - December 31 - is a Bankholiday
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Danish.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.DenmarkPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.DutchPublicHoliday">
            <summary>
            Holiday calendar for the Netherlands
            </summary>
        </member>
        <member name="M:PublicHoliday.DutchPublicHoliday.NewYear(System.Int32)">
            <summary>
            New Year's Day January 1 - Nieuwjaarsdag
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.DutchPublicHoliday.GoodFriday(System.Int32)">
            <summary>
            "Good Friday" / "Goede Vrijdag"
            </summary>
            <remarks>It depends on the company if Good Friday is a free holiday</remarks>
        </member>
        <member name="M:PublicHoliday.DutchPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Easter Monday 1st Monday after Easter - Paasmaandag
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.DutchPublicHoliday.KingsDay(System.Int32)">
            <summary>
            Kingsday/Queensday - Koningsdag/Koninginnendag
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.DutchPublicHoliday.LiberationDay(System.Int32,System.Boolean)">
            <summary>
            Liberation Day May 5 - Bevrijdingsdag
            </summary>
            <param name="year">The year.</param>
            <param name="onlyAtLustrum">Specify if LiberationDay has to be a holiday only at lustrum years</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.DutchPublicHoliday.Ascension(System.Int32)">
            <summary>
            Ascension 6th Thursday after Easter - Hemelvaartsdag
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.DutchPublicHoliday.PentecostMonday(System.Int32)">
            <summary>
            Whit Monday - Pentecost Monday 7th Monday after Easter - Pinkstermaandag
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.DutchPublicHoliday.Christmas(System.Int32)">
            <summary>
            Christmas - December 25 - Eerste Kerstdag
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.DutchPublicHoliday.BoxingDay(System.Int32)">
            <summary>
            Boxing Day - December 26 - Tweede Kerstdag
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.DutchPublicHoliday.#ctor">
            <summary>
            Default - includes Liberation Day as default
            </summary>
        </member>
        <member name="M:PublicHoliday.DutchPublicHoliday.#ctor(System.Boolean)">
            <summary>
            Specify whether to include Liberation Day only at lustrum years
            </summary>
            <param name="liberationDayOnlyAtLustrum"></param>
        </member>
        <member name="M:PublicHoliday.DutchPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.DutchPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Dutch.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.DutchPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.EcbTargetClosingDay">
            <summary>
            ECB - SEPA TARGET Closing Days
            <para>List of days when SEPA is not processing transactions in the EURO area and not publishing currency exchange rates. 
            Based on source: 
            http://www.sepaforcorporates.com/single-euro-payments-area/european-sepa-target-closing-days-2017-2018/
            </para>
            </summary>
        </member>
        <member name="M:PublicHoliday.EcbTargetClosingDay.NewYear(System.Int32)">
            <summary>
            New Year’s Day January 1
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.EcbTargetClosingDay.GoodFriday(System.Int32)">
            <summary>
            Good Friday
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.EcbTargetClosingDay.EasterMonday(System.Int32)">
            <summary>
            Easter Monday
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.EcbTargetClosingDay.LabourDay(System.Int32)">
            <summary>
            Labour Day - May 1
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.EcbTargetClosingDay.ChristmasDay(System.Int32)">
            <summary>
            Christmas Day - December 25
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.EcbTargetClosingDay.ChristmasHoliday(System.Int32)">
            <summary>
            Christmas Holiday - December 26
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.EcbTargetClosingDay.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.EcbTargetClosingDay.PublicHolidayNames(System.Int32)">
            <summary>
            ECB - SEPA TARGET Closing Days names - in English
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.EcbTargetClosingDay.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday (closing day)
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.EstoniaPublicHoliday">
            <summary>
            Public holidays in Estonia.
            Sources used:
             * https://et.wikipedia.org/wiki/Eesti_riigip%C3%BChad
             * https://en.wikipedia.org/wiki/Public_holidays_in_Estonia
             * https://riigipühad.ee/
            </summary>
        </member>
        <member name="M:PublicHoliday.EstoniaPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.EstoniaPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Estonian.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.EstoniaPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.FinlandPublicHoliday">
            <summary>
            Public holidays in Finland.
            <br />
            Typically the large holidays are already celebrated on the Eve. These can be added in constructor.
            <br />
            Public holiday dates have had minor alterations. Current implementation should be quite accurate back to 1774.
            <br />
            Sources used:
            https://en.wikipedia.org/wiki/Public_holidays_in_Finland
            https://fi.wikipedia.org/wiki/Pyh%C3%A4p%C3%A4iv%C3%A4
            </summary>
        </member>
        <member name="F:PublicHoliday.FinlandPublicHoliday._includeNonOfficialHolidays">
            <summary>
            Include days that are considered holiday in some labor agreements. Relevant as some businesses
            are partly or fully closed and public transport runs on special holiday schedule.
            </summary>
        </member>
        <member name="F:PublicHoliday.FinlandPublicHoliday.IndependenceDayAsHolidaySince">
            <summary>
            Became public holiday 1919
            https://fi.wikipedia.org/wiki/Suomen_itsen%C3%A4isyysp%C3%A4iv%C3%A4
            </summary>
        </member>
        <member name="F:PublicHoliday.FinlandPublicHoliday.MidsummerInSaturdaySince">
            <summary>
            Before 1955 midsummer was celebrated ~half year before christmas (fixed 23.6. and 24.6.)
            Since 1955 it's been movable saturday.
            https://fi.wikipedia.org/wiki/Juhannus
            </summary>
        </member>
        <member name="F:PublicHoliday.FinlandPublicHoliday.AllSaintsDayInSaturdaySince">
            <summary>
            Before 1955 All Saints Day was fixed in 1.11.
            Since 1955 it's been movable saturday.
            </summary>
        </member>
        <member name="M:PublicHoliday.FinlandPublicHoliday.#ctor(System.Boolean)">
            <summary>
            Public holidays of Finland
            </summary>
            <param name="includeNonOfficialHolidays">
            Midsummer Eve and Christmas Eve are non-official holidays. They are considered
            holiday in some labor agreements</param>
        </member>
        <member name="M:PublicHoliday.FinlandPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:PublicHoliday.FinlandPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:PublicHoliday.FinlandPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:PublicHoliday.FinlandPublicHoliday.GetMidsummer(System.Int32)">
            <summary>
            Saturday between 20. and 26. June
            </summary>
        </member>
        <member name="M:PublicHoliday.FinlandPublicHoliday.GetAllSaintsDay(System.Int32)">
            <summary>
            Saturday between 31 October and 6 November
            </summary>
        </member>
        <member name="T:PublicHoliday.FrancePublicHoliday">
            <summary>
            Finds France public holidays. 
            Public holidays on Sundays are not deferred to following weekday automatically- 
            they may be taken at an arbitrary date.
            https://fr.wikipedia.org/wiki/F%C3%AAtes_et_jours_f%C3%A9ri%C3%A9s_en_France#Tableau_r%C3%A9capitulatif
            </summary>
        </member>
        <member name="P:PublicHoliday.FrancePublicHoliday.Region">
            <summary>
            Gets or sets the regions/collectivities concerned with special public holidays
            </summary>
        </member>
        <member name="T:PublicHoliday.FrancePublicHoliday.Regions">
            <summary>
            Metropolitan and overseas regions (départements et régions d'outre-mer) and collectivities (collectivité d'outre-mer)
            </summary>
        </member>
        <member name="F:PublicHoliday.FrancePublicHoliday.Regions.OnlyOfficial">
            <summary>
            All regions
            </summary>
        </member>
        <member name="F:PublicHoliday.FrancePublicHoliday.Regions.AlsaceMoselle">
            <summary>
             Alsace et Moselle
            </summary>
        </member>
        <member name="F:PublicHoliday.FrancePublicHoliday.Regions.Guadeloupe">
            <summary>
             Guadeloupe
            </summary>
        </member>
        <member name="F:PublicHoliday.FrancePublicHoliday.Regions.Guyane">
            <summary>
             Guyane
            </summary>
        </member>
        <member name="F:PublicHoliday.FrancePublicHoliday.Regions.Reunion">
            <summary>
             La Réunion
            </summary>
        </member>
        <member name="F:PublicHoliday.FrancePublicHoliday.Regions.Martinique">
            <summary>
             Martinique
            </summary>
        </member>
        <member name="F:PublicHoliday.FrancePublicHoliday.Regions.Mayotte">
            <summary>
             Mayotte
            </summary>
        </member>
        <member name="F:PublicHoliday.FrancePublicHoliday.Regions.NouvelleCaledonie">
            <summary>
             Nouvelle-Calédonie
            </summary>
        </member>
        <member name="F:PublicHoliday.FrancePublicHoliday.Regions.PolynesieFrancaise">
            <summary>
             Polynésie française
            </summary>
        </member>
        <member name="F:PublicHoliday.FrancePublicHoliday.Regions.SaintBarthelemy">
            <summary>
             Saint-Barthélemy
            </summary>
        </member>
        <member name="F:PublicHoliday.FrancePublicHoliday.Regions.SaintMartin">
            <summary>
             Saint-Martin
            </summary>
        </member>
        <member name="F:PublicHoliday.FrancePublicHoliday.Regions.WallisEtFutuna">
            <summary>
             Wallis-et-Futuna
            </summary>
        </member>
        <member name="F:PublicHoliday.FrancePublicHoliday.Regions.ALL">
            <summary>
             All Regions
            </summary>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.NewYear(System.Int32)">
            <summary>
            New Year's Day January 1 Nouvel An 
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.GoodFriday(System.Int32)">
            <summary>
            Good Friday - Friday before Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.FrancePublicHoliday.HasGoodFriday">
            <summary>
            Whether this region observes GoodFriday
            </summary>
            <value>
            <c>true</c> if this region observes GoodFriday; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Easter Monday 1st Monday after Easter - Lundi de Pâques
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.MayotteAbolitionSlavery(System.Int32)">
            <summary>
            Abolition of slavery in Mayotte the 27th of April
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.FrancePublicHoliday.HasMayotteAbolitionSlavery">
            <summary>
            Whether this region observes Abolition of slavery in Mayotte
            </summary>
            <value>
            <c>true</c> if this region observes Abolition of slavery in Mayotte; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.PeterChanel(System.Int32)">
            <summary>
            Peter Chanel Day the 28th of April
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.FrancePublicHoliday.HasPeterChanel">
            <summary>
            Whether this region observes Abolition of slavery in Mayotte
            </summary>
            <value>
            <c>true</c> if this region observes Abolition of slavery in Mayotte; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.MayDay(System.Int32)">
            <summary>
            Mays the day.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.VictoryInEuropeDay(System.Int32)">
            <summary>
            Victory in Europe Day, 8 May - Fête de la Victoire
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.MartiniqueAbolitionSlavery(System.Int32)">
            <summary>
            Abolition of slavery in Martinique the 22th of May
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.FrancePublicHoliday.HasMartiniqueAbolitionSlavery">
            <summary>
            Whether this region observes Abolition of slavery in Martinique
            </summary>
            <value>
            <c>true</c> if this region observes Abolition of slavery in Martinique; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.GuadeloupeAbolitionSlavery(System.Int32)">
            <summary>
            Abolition of slavery in Guadeloupe the 27th of May
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.FrancePublicHoliday.HasGuadeloupeAbolitionSlavery">
            <summary>
            Whether this region observes Abolition of slavery in Guadeloupe
            </summary>
            <value>
            <c>true</c> if this region observes Abolition of slavery in Guadeloupe; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.SaintMartinAbolitionSlavery(System.Int32)">
            <summary>
            Abolition of slavery in Saint-Martin the 28th of May
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.FrancePublicHoliday.HasSaintMartinAbolitionSlavery">
            <summary>
            Whether this region observes Abolition of slavery in Saint-Martin
            </summary>
            <value>
            <c>true</c> if this region observes Abolition of slavery in Saint-Martin; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.Ascension(System.Int32)">
            <summary>
            Ascension 6th Thursday after Easter- Ascension
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.PentecostMonday(System.Int32)">
            <summary>
            Whit Monday - Pentecost Monday 7th Monday after Easter - Lundi de Pentecôte
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="P:PublicHoliday.FrancePublicHoliday.HasPentecostMonday">
            <summary>
            By default Pentecost Monday is a holiday, but it can be a working day for some companies. Set this to false to make it a working day.
            </summary>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.GuyaneAbolitionSlavery(System.Int32)">
            <summary>
            Abolition of slavery in Guyane the 10th of June
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.FrancePublicHoliday.HasGuyaneAbolitionSlavery">
            <summary>
            Whether this region observes Abolition of slavery in Guyane
            </summary>
            <value>
            <c>true</c> if this region observes Abolition of slavery in Guyane; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.AutonomyDay(System.Int32)">
            <summary>
            Autonomy Day In French Polynesia the 29th of June
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.FrancePublicHoliday.HasAutonomyDay">
            <summary>
            Whether this region observes Autonomy Day
            </summary>
            <value>
            <c>true</c> if this region observes Autonomy Day; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.National(System.Int32)">
            <summary>
            Fête nationale française, 14 July
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.VictorSchoelcherDay(System.Int32)">
            <summary>
            Victor Schoelcher's Feast the 21th of July
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.FrancePublicHoliday.HasVictorSchoelcherDay">
            <summary>
            Whether this region observes Victor Schoelcher's Feast
            </summary>
            <value>
            <c>true</c> if this region observes Victor Schoelcher's Feast; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.TerritoryFestivalDay(System.Int32)">
            <summary>
            Territory Festival the 29th of July
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.FrancePublicHoliday.HasTerritoryFestivalDay">
            <summary>
            Whether this region observes Territory Festival
            </summary>
            <value>
            <c>true</c> if this region observes Territory Festival; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.Assumption(System.Int32)">
            <summary>
            Assumption of Mary August 15 - Assomption
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.CitizenshipDay(System.Int32)">
            <summary>
            Citizenship Day the 24th of September
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.FrancePublicHoliday.HasCitizenshipDay">
            <summary>
            Whether this region observes Citizenship Day
            </summary>
            <value>
            <c>true</c> if this region observes Citizenship Day; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.SaintBarthelemyAbolitionSlavery(System.Int32)">
            <summary>
            Abolition of slavery in Saint-Barthélemy the 9th of october
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.FrancePublicHoliday.HasSaintBarthelemyAbolitionSlavery">
            <summary>
            Whether this region observes Abolition of slavery in Saint-Barthélemy
            </summary>
            <value>
            <c>true</c> if this region observes Abolition of slavery in Saint-Barthélemy; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.AllSaints(System.Int32)">
            <summary>
            All Saints November 1 - Toussaint 
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.Armistice(System.Int32)">
            <summary>
            Armistice Day November 11- Jour de l'armistice
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.LaReunionAbolitionSlavery(System.Int32)">
            <summary>
            Abolition of slavery in La Réunion the 20th of december
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.FrancePublicHoliday.HasLaReunionAbolitionSlavery">
            <summary>
            Whether this region observes Abolition of slavery in La Réunion
            </summary>
            <value>
            <c>true</c> if this region observes Abolition of slavery in La Réunion; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.Christmas(System.Int32)">
            <summary>
            Christmas December 25  - Noël
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.SaintStephenDay(System.Int32)">
            <summary>
            Saint Stephen's Day the 26th of december
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.FrancePublicHoliday.HasSaintStephenDay">
            <summary>
            Whether this region observes Saint Stephen's Day
            </summary>
            <value>
            <c>true</c> if this region observes Saint Stephen's Day; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in French.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="M:PublicHoliday.FrancePublicHoliday.PublicHolidaysInformation(System.Int32)">
            <summary>
            Gets the list of all public holidays with details of the cantons in the Holiday object, 
            if it's public the variable isPublic is set to true.
            </summary>
            <param name="year">The given year</param>
            <returns></returns>
        </member>
        <member name="T:PublicHoliday.GermanPublicHoliday">
            <summary>
            German Federal (German Unity Day) and State Public Holidays (excluding Sundays)
            </summary>
        </member>
        <member name="P:PublicHoliday.GermanPublicHoliday.State">
            <summary>
            Gets or sets the state (ISO 3166-2:DE), + default All for all states.
            </summary>
        </member>
        <member name="T:PublicHoliday.GermanPublicHoliday.States">
             <summary>
            
             </summary>
        </member>
        <member name="F:PublicHoliday.GermanPublicHoliday.States.ALL">
            <summary>
            All states
            </summary>
        </member>
        <member name="F:PublicHoliday.GermanPublicHoliday.States.BW">
            <summary>
            Baden-Württemberg
            </summary>
        </member>
        <member name="F:PublicHoliday.GermanPublicHoliday.States.BY">
            <summary>
            Bayern, Bavaria
            </summary>
        </member>
        <member name="F:PublicHoliday.GermanPublicHoliday.States.BE">
            <summary>
            Berlin
            </summary>
        </member>
        <member name="F:PublicHoliday.GermanPublicHoliday.States.BB">
            <summary>
            Brandenburg
            </summary>
        </member>
        <member name="F:PublicHoliday.GermanPublicHoliday.States.HB">
            <summary>
            Bremen
            </summary>
        </member>
        <member name="F:PublicHoliday.GermanPublicHoliday.States.HH">
            <summary>
            Hamburg
            </summary>
        </member>
        <member name="F:PublicHoliday.GermanPublicHoliday.States.HE">
            <summary>
            Hessen, Hesse
            </summary>
        </member>
        <member name="F:PublicHoliday.GermanPublicHoliday.States.MV">
            <summary>
            Mecklenburg-Vorpommern
            </summary>
        </member>
        <member name="F:PublicHoliday.GermanPublicHoliday.States.NI">
            <summary>
            Niedersachsen, Lower Saxony
            </summary>
        </member>
        <member name="F:PublicHoliday.GermanPublicHoliday.States.NW">
            <summary>
            Nordrhein-Westfalen, North Rhine-Westphalia
            </summary>
        </member>
        <member name="F:PublicHoliday.GermanPublicHoliday.States.RP">
            <summary>
            Rheinland-Pfalz, Rhineland-Palatinate
            </summary>
        </member>
        <member name="F:PublicHoliday.GermanPublicHoliday.States.SL">
            <summary>
            Saarland
            </summary>
        </member>
        <member name="F:PublicHoliday.GermanPublicHoliday.States.SN">
            <summary>
            Sachsen, Saxony
            </summary>
        </member>
        <member name="F:PublicHoliday.GermanPublicHoliday.States.ST">
            <summary>
            Sachsen-Anhalt
            </summary>
        </member>
        <member name="F:PublicHoliday.GermanPublicHoliday.States.SH">
            <summary>
            Schleswig-Holstein
            </summary>
        </member>
        <member name="F:PublicHoliday.GermanPublicHoliday.States.TH">
            <summary>
            Thüringen
            </summary>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.NewYear(System.Int32)">
            <summary>
            Neujahrstag New Year's Day January 1
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.Epiphany(System.Int32)">
            <summary>
            Heilige Drei Könige Epiphany January 6
            </summary>
            <param name="year"></param>
        </member>
        <member name="P:PublicHoliday.GermanPublicHoliday.HasEpiphany">
            <summary>
            Whether this state observes epiphany.
            </summary>
            <value>
            <c>true</c> if this state observes epiphany; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.GoodFriday(System.Int32)">
            <summary>
            Karfreitag - Good Friday
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.EasterSunday(System.Int32)">
            <summary>
            Ostersonntag - Easter Sunday
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="P:PublicHoliday.GermanPublicHoliday.HasEasterSunday">
            <summary>
            Whether this state observes Ostersonntag.
            </summary>
            <value>
            <c>true</c> if this state observes Ostersonntag; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Ostermontag - Easter Monday
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.MayDay(System.Int32)">
            <summary>
            Tag der Arbeit - Labour Day
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.Ascension(System.Int32)">
            <summary>
            Christi Himmelfahrt - Ascension
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.PentecostSunday(System.Int32)">
            <summary>
            Pfingstsonntag - Pentecost Sunday
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="P:PublicHoliday.GermanPublicHoliday.HasPentecostSunday">
            <summary>
            Whether this state observes Pfingstsonntag.
            </summary>
            <value>
            <c>true</c> if this state observes Pfingstsonntag; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.PentecostMonday(System.Int32)">
            <summary>
            Pfingstmontag - Pentecost
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.CorpusChristi(System.Int32)">
            <summary>
            Fronleichnam - CorpusChristi
            </summary>
            <param name="year"></param>
        </member>
        <member name="P:PublicHoliday.GermanPublicHoliday.HasCorpusChristi">
            <summary>
            Whether this state observes Fronleichnam.
            </summary>
            <value>
            <c>true</c> if this state observes Fronleichnam; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.Assumption(System.Int32)">
            <summary>
            Mariä Himmelfahrt - Assumption of Mary
            </summary>
            <param name="year"></param>
        </member>
        <member name="P:PublicHoliday.GermanPublicHoliday.HasAssumption">
            <summary>
            Whether this state observes Mariä Himmelfahrt.
            </summary>
            <value>
            <c>true</c> if this state observes Mariä Himmelfahrt; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.WorldChildrensDay(System.Int32)">
            <summary>
            Kindertag - World Children's Day
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.HasWorldChildrensDay(System.Int32)">
            <summary>
            Whether this state observes Kindertag
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.GermanUnity(System.Int32)">
            <summary>
            Tag der Deutschen Einheit - German Unity
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.Reformation(System.Int32)">
            <summary>
            Reformationstag - Reformation
            </summary>
            <param name="year"></param>
        </member>
        <member name="P:PublicHoliday.GermanPublicHoliday.HasReformation">
            <summary>
            Whether this state observes Reformationstag
            </summary>
            <value>
            <c>true</c> if this state observes Reformationstag; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.AllSaints(System.Int32)">
            <summary>
            Allerheiligen - All Saints
            </summary>
            <param name="year"></param>
        </member>
        <member name="P:PublicHoliday.GermanPublicHoliday.HasAllSaints">
            <summary>
            Whether this state observes Allerheiligen
            </summary>
            <value>
            <c>true</c> if this state observes Allerheiligen; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.Repentance(System.Int32)">
            <summary>
            Buß- und Bettag - Repentance and Prayer
            </summary>
            <param name="year"></param>
        </member>
        <member name="P:PublicHoliday.GermanPublicHoliday.HasRepentance">
            <summary>
            Whether this state observes Buß- und Bettag
            </summary>
            <value>
            <c>true</c> if this state observes Buß- und Bettag; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.Christmas(System.Int32)">
            <summary>
            Weihnachtstag - Christmas
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.StStephen(System.Int32)">
            <summary>
            Zweiter Weihnachtsfeiertag- St Stephens
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.HasWomensDay(System.Int32)">
            <summary>
            Whether this state observes Womens Day/Weltfrauentag (March 8)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.WomensDay(System.Int32)">
            <summary>
            International Women's Day/ Weltfrauentag
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            List of federal and state holidays (for defined <see cref="P:PublicHoliday.GermanPublicHoliday.State"/>)
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Get a list of dates with names for all holidays in a year.
            </summary>
            <param name="year">The year.</param>
            <returns>
            Dictionary of bank holidays
            </returns>
        </member>
        <member name="M:PublicHoliday.GermanPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Determines whether date is a public holiday.
            </summary>
            <param name="dt">The date.</param>
            <returns>
              <c>true</c> if is public holiday; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:PublicHoliday.GreecePublicHoliday">
            <summary>
            Public Holidays in Greece. Based on https://en.wikipedia.org/wiki/Public_holidays_in_Greece
            </summary>
            <remarks>
            NB: Legally every Sunday of the year is a public holiday. This only includes the 6 fixed holidays and 3 non-fixed.
            </remarks>
        </member>
        <member name="M:PublicHoliday.GreecePublicHoliday.CleanMonday(System.Int32)">
            <summary>
            Clean Monday (Ash Monday, first day of Lent)
            </summary>
        </member>
        <member name="M:PublicHoliday.GreecePublicHoliday.IndependenceDay(System.Int32)">
            <summary>
            Greek Independence Day (also, Annunciation of the Virgin Mary)
            </summary>
        </member>
        <member name="M:PublicHoliday.GreecePublicHoliday.GreatFriday(System.Int32)">
            <summary>
            Great Friday
            </summary>
        </member>
        <member name="M:PublicHoliday.GreecePublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Easter Monday
            </summary>
        </member>
        <member name="M:PublicHoliday.GreecePublicHoliday.WhitMonday(System.Int32)">
            <summary>
            Whit Monday (Pentecost Monday)
            </summary>
        </member>
        <member name="M:PublicHoliday.GreecePublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Public holidays in Greece
            </summary>
        </member>
        <member name="M:PublicHoliday.GreecePublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Holidays with names (if CurrentCulture is Greek, shown in Greek; otherwise English)
            </summary>
        </member>
        <member name="M:PublicHoliday.GreecePublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Is a specific date a holiday (does not include Sundays)
            </summary>
        </member>
        <member name="T:PublicHoliday.Holiday">
            <summary>
            A holiday
            </summary>
        </member>
        <member name="M:PublicHoliday.Holiday.#ctor(System.DateTime,System.String)">
            <summary>
            Constructs the holiday with a date and invariant name
            </summary>
            <param name="date"></param>
            <param name="englishName"></param>
        </member>
        <member name="M:PublicHoliday.Holiday.#ctor(System.DateTime,System.String,System.String)">
            <summary>
            Constructs the holiday with a date, invariant name and localized name
            </summary>
            <param name="date"></param>
            <param name="englishName"></param>
            <param name="localName"></param>
        </member>
        <member name="M:PublicHoliday.Holiday.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Constructs the holiday
            </summary>
            <param name="date">The date of the current holiday</param>
            <param name="observedDate">The date the current holiday is observed on</param>
        </member>
        <member name="M:PublicHoliday.Holiday.#ctor(System.DateTime,System.DateTime,System.String)">
            <summary>
            Constructs the holiday
            </summary>
            <param name="date">The date of the current holiday</param>
            <param name="observedDate">The date the current holiday is observed on</param>
            <param name="idTextLocalization">The Id of text for the Localization</param>
        </member>
        <member name="M:PublicHoliday.Holiday.#ctor(System.DateTime,System.String,System.String,System.String[])">
            <summary>
            Constructs the holiday
            </summary>
            <param name="date">The date of the current holiday</param>
            <param name="englishName"></param>
            <param name="localName"></param>
            <param name="regions">Names of regions of the country where this holiday exists</param>
        </member>
        <member name="P:PublicHoliday.Holiday.ObservedDate">
            <summary>
            The date the Holiday is actually observed on
            </summary>
        </member>
        <member name="P:PublicHoliday.Holiday.HolidayDate">
            <summary>
            Date for the current holiday
            </summary>
        </member>
        <member name="P:PublicHoliday.Holiday.EnglishName">
            <summary>
            English name of holiday. Use <see cref="P:PublicHoliday.Holiday.Name"/> for local name
            </summary>
        </member>
        <member name="P:PublicHoliday.Holiday.Name">
            <summary>
            Localized name. May be <see cref="P:PublicHoliday.Holiday.EnglishName"/>
            </summary>
        </member>
        <member name="P:PublicHoliday.Holiday.IdTextLocalization">
            <summary>
            Id of text for the localization
            </summary>
        </member>
        <member name="P:PublicHoliday.Holiday.IsPublic">
            <summary>
            Is the holiday a public holiday for all regions
            </summary>
        </member>
        <member name="P:PublicHoliday.Holiday.Regions">
            <summary>
            Names of regions of the country where this holiday exists
            </summary>
        </member>
        <member name="M:PublicHoliday.Holiday.GetName(System.Globalization.CultureInfo)">
            <summary>
            Name from CultureInfo for the current holiday
            If not find Empty
            </summary>
        </member>
        <member name="M:PublicHoliday.Holiday.GetName">
            <summary>
            Name for the current holiday
            If not find Empty
            </summary>
        </member>
        <member name="P:PublicHoliday.Holiday.Year">
            <summary>
            Gets the year component of the observed date
            </summary>
        </member>
        <member name="P:PublicHoliday.Holiday.Month">
            <summary>
            Gets the month component of the observed date
            </summary>
        </member>
        <member name="P:PublicHoliday.Holiday.Day">
            <summary>
            Gets the day component of the observed date
            </summary>
        </member>
        <member name="P:PublicHoliday.Holiday.DayOfWeek">
            <summary>
            Gets the day of the week of the observed date
            </summary>
        </member>
        <member name="M:PublicHoliday.Holiday.op_Implicit(PublicHoliday.Holiday)~System.DateTime">
            <summary>
            Implicitly casts a holiday as its observed date
            </summary>
            <param name="h">The holiday</param>
        </member>
        <member name="M:PublicHoliday.Holiday.ToString">
            <summary>
            The holiday name and date(s)
            </summary>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.LinqExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Implementation of net 6 DistinctBy for older versions of .net
            </summary>
        </member>
        <member name="T:PublicHoliday.HolidayCalculator">
            <summary>
            Work out the date for Easter Sunday for specified year
            </summary>
        </member>
        <member name="M:PublicHoliday.HolidayCalculator.GetEaster(System.Int32)">
            <summary>
            Work out the date for Easter Sunday for specified year
            </summary>
            <param name="year">The year as an integer</param>
            <returns>Returns a datetime of Easter Sunday.</returns>
        </member>
        <member name="M:PublicHoliday.HolidayCalculator.GetEasterPrivate(System.Int32)">
            <summary>
            Work out the date for Easter Sunday for specified year
            </summary>
            <param name="year">The year as an integer</param>
            <returns>Returns a datetime of Easter Sunday.</returns>
        </member>
        <member name="M:PublicHoliday.HolidayCalculator.GetOrthodoxEaster(System.Int32)">
            <summary>
            Work out the date for Orthodox Easter Sunday for specified year
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.HolidayCalculator.FixWeekend(System.DateTime)">
            <summary>
            Fix weekend to monday.
            </summary>
            <param name="hol"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.HolidayCalculator.FixWeekendSaturdayBeforeSundayAfter(System.DateTime)">
            <summary>
            Fix weekend with saturday to friday and the sunday to monday.
            </summary>
            <param name="hol"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.HolidayCalculator.FixWeekendSundayAfter(System.DateTime)">
            <summary>
            Fix weekend with only sunday to monday.
            </summary>
            <param name="hol"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.HolidayCalculator.FixWeekendTwoHolidayAfter(System.DateTime)">
            <summary>
            Fix Weekend for the after of two holiday consecutive with standard FixWeekend to monday.
            </summary>
            <param name="hol"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.HolidayCalculator.FixWeekendTwoHolidayBefore(System.DateTime)">
            <summary>
            Fix Weekend for the before with two holiday consecutive with standard FixWeekend to monday
            </summary>
            <param name="hol"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.HolidayCalculator.IsWorkingDay(PublicHoliday.IPublicHolidays,System.DateTime)">
            <summary>
            Returns whether the specified date is a working day
            </summary>
            <param name="holidayCalendar">The holiday calendar.</param>
            <param name="dt">The date to be checked</param>
            <returns>Returns a boolean of whether the specified date is a working day</returns>
        </member>
        <member name="M:PublicHoliday.HolidayCalculator.NextWorkingDay(PublicHoliday.IPublicHolidays,System.DateTime,System.Boolean)">
            <summary>
            Returns the next working day (Mon-Fri, not public holiday)
            after the specified date (or the same date)
            </summary>
            <param name="holidayCalendar">The holiday calendar.</param>
            <param name="dt">The date you wish to check</param>
            <param name="sameDay">If we can return same date</param>
            <returns>
            A date that is a working day without time
            </returns>
        </member>
        <member name="M:PublicHoliday.HolidayCalculator.NextWorkingDay(PublicHoliday.IPublicHolidays,System.DateTime,System.Int32,System.Boolean)">
            <summary>
            Returns the next working day (Mon-Fri, not public holiday)
            after x day of the specified date (or the same date)
            </summary>
            <param name="holidayCalendar">The holiday calendar.</param>
            <param name="dt">The date you wish to check</param>
            <param name="openDayAdd">The number of open day to add</param>
            <param name="sameDay">If we can return same date</param>
            <returns>
            A date that is a working day without time
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">openDayAdd - negative number</exception>
        </member>
        <member name="M:PublicHoliday.HolidayCalculator.PreviousWorkingDay(PublicHoliday.IPublicHolidays,System.DateTime,System.Boolean)">
            <summary>
            Returns the previous working day (Mon-Fri, not public holiday)
            before the specified date (or the same date)
            </summary>
            <param name="holidayCalendar">The holiday calendar.</param>
            <param name="dt">The date you wish to check</param>
            <param name="sameDay">If we can return same date</param>
            <returns>
            A date that is a working day without time
            </returns>
        </member>
        <member name="M:PublicHoliday.HolidayCalculator.PreviousWorkingDay(PublicHoliday.IPublicHolidays,System.DateTime,System.Int32,System.Boolean)">
            <summary>
            Returns the previous working day (Mon-Fri, not public holiday)
            before x day of the specified date (or the same date)
            </summary>
            <param name="holidayCalendar">The holiday calendar.</param>
            <param name="dt">The date you wish to check</param>
            <param name="openDaySubstract">The number of open day to substract</param>
            <param name="sameDay">If we can return same date</param>
            <returns>
            A date that is a working day without time
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">opendaysubstract - negative number</exception>
        </member>
        <member name="T:PublicHoliday.IPublicHolidays">
            <summary>
            Public holidays
            </summary>
        </member>
        <member name="M:PublicHoliday.IPublicHolidays.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.IPublicHolidays.PublicHolidaysInformation(System.Int32)">
            <summary>
            Returns observed and holiday dates for all holidays
            </summary>
            <param name="year">The current year</param>
            <returns>A list of observed holidays</returns>
        </member>
        <member name="M:PublicHoliday.IPublicHolidays.PublicHolidayNames(System.Int32)">
            <summary>
            Get a list of dates with names for all holidays in a year.
            </summary>
            <param name="year">The year.</param>
            <returns>Dictionary of bank holidays</returns>
        </member>
        <member name="M:PublicHoliday.IPublicHolidays.NextWorkingDay(System.DateTime)">
            <summary>
            Returns the next working day (Mon-Fri, not public holiday)
            after the specified date (or the same date)
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>A date that is a working day</returns>
        </member>
        <member name="M:PublicHoliday.IPublicHolidays.NextWorkingDayNotSameDay(System.DateTime)">
            <summary>
            Returns the next working day (Mon-Fri, not public holiday)
            after the specified date (not the same date)
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>A date that is a working day</returns>
        </member>
        <member name="M:PublicHoliday.IPublicHolidays.NextWorkingDay(System.DateTime,System.Int32)">
            <summary>
            Returns the next working day (Mon-Fri, not public holiday)
            after the specified date (or the same date)
            </summary>
            <param name="dt">The date you wish to check</param>
            <param name="openDayAdd">The number of open day to add</param>
            <returns>A date that is a working day</returns>
        </member>
        <member name="M:PublicHoliday.IPublicHolidays.NextWorkingDayNotSameDay(System.DateTime,System.Int32)">
            <summary>
            Returns the next working day (Mon-Fri, not public holiday)
            after the specified date (not the same date)
            </summary>
            <param name="dt">The date you wish to check</param>
            <param name="openDayAdd">The number of open day to add</param>
            <returns>A date that is a working day</returns>
        </member>
        <member name="M:PublicHoliday.IPublicHolidays.PreviousWorkingDay(System.DateTime)">
            <summary>
            Returns the previous working day (Mon-Fri, not public holiday)
            before the specified date (or the same date)
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>A date that is a working day</returns>
        </member>
        <member name="M:PublicHoliday.IPublicHolidays.PreviousWorkingDayNotSameDay(System.DateTime)">
            <summary>
            Returns the previous working day (Mon-Fri, not public holiday)
            before the specified date (not the same date)
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>A date that is a working day</returns>
        </member>
        <member name="M:PublicHoliday.IPublicHolidays.PreviousWorkingDay(System.DateTime,System.Int32)">
            <summary>
            Returns the previous working day (Mon-Fri, not public holiday)
            before the specified date (or the same date)
            </summary>
            <param name="dt">The date you wish to check</param>
            <param name="openDaySubstract">>The number of open day to substract</param>
            <returns>A date that is a working day</returns>
        </member>
        <member name="M:PublicHoliday.IPublicHolidays.PreviousWorkingDayNotSameDay(System.DateTime,System.Int32)">
            <summary>
            Returns the previous working day (Mon-Fri, not public holiday)
            before the specified date (not the same date)
            </summary>
            <param name="dt">The date you wish to check</param>
            <param name="openDaySubstract">>The number of open day to substract</param>
            <returns>A date that is a working day</returns>
        </member>
        <member name="M:PublicHoliday.IPublicHolidays.GetHolidaysInDateRange(System.DateTime,System.DateTime)">
            <summary>
            Gets Holidays between two date times.
            </summary>
            <param name="startDate">The beginning of the date range</param>
            <param name="endDate">The end of the date range</param>
            <returns>A list of holidays</returns>
        </member>
        <member name="M:PublicHoliday.IPublicHolidays.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the <see cref="M:PublicHoliday.IPublicHolidays.PublicHolidays(System.Int32)"/> list is more efficient for repeated checks
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday (excluding weekends)</returns>
        </member>
        <member name="P:PublicHoliday.IPublicHolidays.UseCachingHolidays">
            <summary>
            Determines whether to use the cache
            </summary>
        </member>
        <member name="M:PublicHoliday.IPublicHolidays.IsWorkingDay">
            <summary>
            Returns whether todays date is a working day
            </summary>
            <returns>A boolean of whether today is a working day</returns>
        </member>
        <member name="M:PublicHoliday.IPublicHolidays.IsWorkingDay(System.DateTime)">
            <summary>
            Returns whether the specified date is a working day
            </summary>
            <param name="dt">The date to be checked</param>
            <returns>Returns a boolean of whether the specified date is a working day</returns>
        </member>
        <member name="T:PublicHoliday.IrelandPublicHoliday">
            <summary>
            Holidays in Ireland/Eire
            </summary>
        </member>
        <member name="M:PublicHoliday.IrelandPublicHoliday.NewYear(System.Int32)">
            <summary>
            Lá Caille - New Year's Day
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.IrelandPublicHoliday.StBrigid(System.Int32)">
            <summary>
            Imbolc  - Saint Brigid's Day (from 2023)
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.IrelandPublicHoliday.StPatricksDay(System.Int32)">
            <summary>
            Lá Fhéile Pádraig - St Patrick's Day March 17
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.IrelandPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Luan Cásca - Easter Monday
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.IrelandPublicHoliday.MayDay(System.Int32)">
            <summary>
            Lá Bealtaine - May Day
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.IrelandPublicHoliday.JuneHoliday(System.Int32)">
            <summary>
            Lá Saoire i mí an Mheithimh - June Holiday
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.IrelandPublicHoliday.AugustHoliday(System.Int32)">
            <summary>
            Lá Saoire i mí Lúnasa - August Holiday
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.IrelandPublicHoliday.OctoberHoliday(System.Int32)">
            <summary>
            Lá Saoire i mí Dheireadh Fómhair - October Holiday
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.IrelandPublicHoliday.Christmas(System.Int32)">
            <summary>
            Lá Nollag - Christmas
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.IrelandPublicHoliday.StStephen(System.Int32)">
            <summary>
            Lá Fhéile Stiofáin - St Stephen's Day
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.IrelandPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.IrelandPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Irish Gaelic.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.IrelandPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.ItalyPublicHoliday">
            <summary>
            Holidays in Italy
            </summary>
        </member>
        <member name="M:PublicHoliday.ItalyPublicHoliday.NewYear(System.Int32)">
            <summary>
            Capodanno - New Year's Day
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.ItalyPublicHoliday.Epiphany(System.Int32)">
            <summary>
            Epifania - Epiphany January 6
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.ItalyPublicHoliday.Easter(System.Int32)">
            <summary>
            Pasqua - Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.ItalyPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Pasquetta - Easter Monday
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.ItalyPublicHoliday.LiberationDay(System.Int32)">
            <summary>
            Festa della Liberazione- Liberation Day
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.ItalyPublicHoliday.LabourDay(System.Int32)">
            <summary>
            Festa del Lavoro - Labour Day
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.ItalyPublicHoliday.RepublicDay(System.Int32)">
            <summary>
            Festa della Repubblica - Republic Day
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.ItalyPublicHoliday.Assumption(System.Int32)">
            <summary>
            Ferragosto - Assumption of Mary
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.ItalyPublicHoliday.AllSaints(System.Int32)">
            <summary>
            Tutti i santi - All Saints
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.ItalyPublicHoliday.ImmaculateConception(System.Int32)">
            <summary>
            Immacolata Concezione - Immaculate Conception
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.ItalyPublicHoliday.Christmas(System.Int32)">
            <summary>
            Natale - Christmas
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.ItalyPublicHoliday.StStephen(System.Int32)">
            <summary>
            Santo Stefano - St Stephen's Day
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.ItalyPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.ItalyPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Italian.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.ItalyPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.JapanPublicHoliday">
            <summary>
            Finds Japan public holidays. Adjusted for weekends.
            <description>
            Based on https://en.wikipedia.org/wiki/Public_holidays_in_Japan
            </description>
            </summary>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.NewYear(System.Int32)">
            <summary>
            Date of New Year bank holiday.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.ComingOfAgeDay(System.Int32)">
            <summary>
            Coming of Age Day (成人の日 Seijin no Hi)
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.FoundationDay(System.Int32)">
            <summary>
            Foundation Day (建国記念の日 Kenkoku Kinen no Hi)
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.VernalEquinoxDay(System.Int32)">
            <summary>
            Vernal Equinox Day (春分の日 Shunbun no Hi). *March 20 or 21, not fixed*
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.ShōwaDay(System.Int32)">
            <summary>
            Shōwa Day (昭和の日 Shōwa no Hi)
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.ConstitutionMemorialDay(System.Int32)">
            <summary>
            Constitution Memorial Day (憲法記念日 Kenpō Kinenbi)
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.GreeneryDay(System.Int32)">
            <summary>
            Greenery Day (みどりの日 Midori no Hi)
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.ChildrensDay(System.Int32)">
            <summary>
            Children's Day (こどもの日 Kodomo no Hi)
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.MarineDay(System.Int32)">
            <summary>
            Marine Day (海の日 Umi no Hi)
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.MountainDay(System.Int32)">
            <summary>
            Mountain Day (山の日 Yama no Hi)
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.RespectForTheAgedDay(System.Int32)">
            <summary>
            Respect for the Aged Day (敬老の日 Keirō no Hi)
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.AutumnalEquinoxDay(System.Int32)">
            <summary>
            Autumnal Equinox Day (秋分の日 Shūbun no Hi)
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.HealthAndSportsDay(System.Int32)">
            <summary>
            Health and Sports Day (体育の日 Taiiku no Hi)
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.CultureDay(System.Int32)">
            <summary>
            Culture Day (文化の日 Bunka no Hi)
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.LabourThanksgivingDay(System.Int32)">
            <summary>
            Labour Thanksgiving Day (勤労感謝の日 Kinrō Kansha no Hi)
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.EmperorsBirthday(System.Int32)">
            <summary>
            The Emperor's Birthday (天皇誕生日 Tennō Tanjōbi)
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of bank holidays</returns>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>Dictionary of bank holidays</returns>
        </member>
        <member name="M:PublicHoliday.JapanPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>
            True if date is a bank holiday (excluding weekends)
            </returns>
        </member>
        <member name="T:PublicHoliday.KazakhstanPublicHoliday">
            <summary>
            Represents holidays in the Kazakhstan
            </summary>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.NewYear(System.Int32)">
            <summary>
            New Year's Day January 1
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.DayAfterNewYear(System.Int32)">
            <summary>
            Day after New Year's Day January 2
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.Christmas(System.Int32)">
            <summary>
            Christmas January 7
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.WomansDay(System.Int32)">
            <summary>
            Womans Day - March 8th
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.NauryzFirstDay(System.Int32)">
            <summary>
            First day of Nauryz - March 21th
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.NauryzSecondDay(System.Int32)">
            <summary>
            First day of Nauryz - March 22th
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.NauryzThirdDay(System.Int32)">
            <summary>
            First day of Nauryz - March 23th
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.NationUnityDay(System.Int32)">
            <summary>
            Nation unity Day - Mai 1st
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.HomelandProtectorDay(System.Int32)">
            <summary>
            Homeland protector Day - Mai 7st
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.VictoryDay(System.Int32)">
            <summary>
            Victory Day - Mai 9st
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.CapitalDay(System.Int32)">
            <summary>
            Capital Day - July 6th
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.ConstitutionDay(System.Int32)">
            <summary>
            Constitution Day - August 30th
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.KurbanAitDay(System.Int32)">
            <summary>
            Kurban Ait - September 1th
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.FirstPresidentDay(System.Int32)">
            <summary>
            First president day - December 1th
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.IndependenceDay(System.Int32)">
            <summary>
            Independence day - December 16th
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.IndependenceSecondDay(System.Int32)">
            <summary>
            Second day of independence - December 17th
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Russian.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.KazakhstanPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.LithuaniaPublicHoliday">
            <summary>
            Public holidays in Lithuania.
            Sources used:
             * https://en.wikipedia.org/wiki/Public_holidays_in_Lithuania
            </summary>
        </member>
        <member name="M:PublicHoliday.LithuaniaPublicHoliday.MothersDay(System.Int32)">
            <summary>
            Motinos diena - Mother's Day
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.LithuaniaPublicHoliday.FathersDay(System.Int32)">
            <summary>
            Tėvo diena - Father's Day
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.LithuaniaPublicHoliday.Easter(System.Int32)">
            <summary>
            Šv. Velykos - Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.LithuaniaPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Antroji šv. Velykų diena - Easter Monday
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.LithuaniaPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.LithuaniaPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Lithuania.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.LithuaniaPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.Localization.ILocalizedProvider`1">
            <summary>
            Interface of LocalizedProvider of T
            </summary>
            <typeparam name="T">Type of localized</typeparam>
        </member>
        <member name="P:PublicHoliday.Localization.ILocalizedProvider`1.DefaultCultureInfo">
            <summary>
            Default CultureInfo
            </summary>
        </member>
        <member name="M:PublicHoliday.Localization.ILocalizedProvider`1.GetLocalized(System.String,System.Globalization.CultureInfo)">
            <summary>
            Search for the Id of text the localization and the CultureInfo / CultureInfo Invariant / Default CultureInfo.
            </summary>
            <param name="id">Id of text to search</param>
            <param name="culture"></param>
            <returns>Value find, else null</returns>
        </member>
        <member name="M:PublicHoliday.Localization.ILocalizedProvider`1.GetLocalized(System.String)">
            <summary>
            Search for the Id of text the localization and the default CultureInfo.
            </summary>
            <param name="id">Id of text to search</param>
            <returns>Value find, else null</returns>
        </member>
        <member name="M:PublicHoliday.Localization.ILocalizedProvider`1.TryGetLocalized(System.String,System.Globalization.CultureInfo,`0@)">
            <summary>
            Search for the Id of text the localization and the CultureInfo / CultureInfo Invariant / Default CultureInfo.
            </summary>
            <param name="id">Id of text to search</param>
            <param name="culture">CultureInfo to search</param>
            <param name="value">Value find, else null</param>
            <returns>True if find a value for id, else False</returns>
        </member>
        <member name="M:PublicHoliday.Localization.ILocalizedProvider`1.TryGetLocalized(System.String,`0@)">
            <summary>
            Search for the Id of text the localization and the Default CultureInfo.
            </summary>
            <param name="id">Id of text to search</param>
            <param name="value">Value find, else null</param>
            <returns>True if find a value for id, else False</returns>
        </member>
        <member name="T:PublicHoliday.Localization.IResourceProvider`1">
            <summary>
            Interface of ResourceProvider
            </summary>
            <typeparam name="T">Type of Resource</typeparam>
        </member>
        <member name="M:PublicHoliday.Localization.IResourceProvider`1.GetResource">
            <summary>
            Get Resource
            </summary>
            <returns>Resources of type T</returns>
        </member>
        <member name="T:PublicHoliday.Localization.LocalizedProviderString">
             <summary>
            
             </summary>
        </member>
        <member name="F:PublicHoliday.Localization.LocalizedProviderString._resourceProviderXDocument">
            <summary>
            Resource in a XDocument
            </summary>
        </member>
        <member name="F:PublicHoliday.Localization.LocalizedProviderString._resourceXDocument">
            <summary>
            Resource, if not exist obtain.
            </summary>
        </member>
        <member name="P:PublicHoliday.Localization.LocalizedProviderString.DefaultCultureInfo">
            <summary>
            Default CultureInfo.
            </summary>
        </member>
        <member name="M:PublicHoliday.Localization.LocalizedProviderString.#ctor(PublicHoliday.Localization.IResourceProvider{System.Xml.Linq.XDocument})">
            <summary>
            Constructor, specified the provider of Resource
            Set default CultureInfo to "en"
            </summary>
            <param name="resourceProviderXDocument">ResourceProvider to use</param>
        </member>
        <member name="M:PublicHoliday.Localization.LocalizedProviderString.GetLocalized(System.String,System.Globalization.CultureInfo)">
            <summary>
            Obtain the string of the id and CultureInfo with logic if not find
            </summary>
            <param name="id">id of the text to search</param>
            <param name="culture">CultureInfo of the text to search</param>
            <returns>Text find or Empty</returns>
        </member>
        <member name="M:PublicHoliday.Localization.LocalizedProviderString.GetLocalized(System.String)">
            <summary>
            Obtain the string of the id and the default CultureInfo
            </summary>
            <param name="id">id of the text to search</param>
            <returns>Text find or Empty</returns>
        </member>
        <member name="M:PublicHoliday.Localization.LocalizedProviderString.TryGetLocalized(System.String,System.Globalization.CultureInfo,System.String@)">
            <summary>
            Try obtain the string of the id and the CultureInfo.
            If we not find, try the language o  parameter else the default CultureInfo.
            </summary>
            <param name="id">id of the text to search</param>
            <param name="culture">CultureInfo of the text to search</param>
            <param name="value">Text find or Empty</param>
            <returns>If we find or not a text</returns>
        </member>
        <member name="M:PublicHoliday.Localization.LocalizedProviderString.TryGetLocalized(System.String,System.String@)">
            <summary>
            Try obtain the string of the id and the default CultureInfo
            </summary>
            <param name="id">id of the text to search</param>
            <param name="value">Text find or Empty</param>
            <returns>If we find or not the id with default CultureInfo</returns>
        </member>
        <member name="M:PublicHoliday.Localization.LocalizedProviderString.XDocumentValue(System.Xml.Linq.XDocument,System.String,System.String)">
            <summary>
            Search for the culture and id in the doc
            </summary>
            <param name="doc">doc in which to search</param>
            <param name="culture">Culture of the text to search</param>
            <param name="IdText">Id of the text to search</param>
            <returns>XElement find or null</returns>
        </member>
        <member name="T:PublicHoliday.Localization.ResourceProviderXDocument">
            <summary>
            Resource in XDocument
            </summary>
        </member>
        <member name="M:PublicHoliday.Localization.ResourceProviderXDocument.PublicHoliday#Localization#IResourceProvider{System#Xml#Linq#XDocument}#GetResource">
            <summary>
            Get XDocument from from the internal XML LocalizationString
            </summary>
            <returns>XDocument with Resource</returns>
        </member>
        <member name="T:PublicHoliday.LuxembourgPublicHoliday">
            <summary>
            Holidays in Luxembourg
            </summary>
        </member>
        <member name="M:PublicHoliday.LuxembourgPublicHoliday.NewYear(System.Int32)">
            <summary>
            Neijoerschdag - New Year's Day
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.LuxembourgPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Ouschterméindeg - Easter Monday
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.LuxembourgPublicHoliday.LabourDay(System.Int32)">
            <summary>
            Dag vun der Aarbecht - Labour Day
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.LuxembourgPublicHoliday.Ascension(System.Int32)">
            <summary>
            Christi Himmelfaar - Ascension
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.LuxembourgPublicHoliday.NationalDay(System.Int32)">
            <summary>
            Nationalfeierdag - National Day
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.LuxembourgPublicHoliday.PentecostMonday(System.Int32)">
            <summary>
            Péngschtméindeg - Pentecost
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.LuxembourgPublicHoliday.Assumption(System.Int32)">
            <summary>
            Mariä Himmelfaart - Assumption of Mary
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.LuxembourgPublicHoliday.AllSaints(System.Int32)">
            <summary>
            Allerhellgen - All Saints
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.LuxembourgPublicHoliday.Christmas(System.Int32)">
            <summary>
            Chrëschtdag - Christmas
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.LuxembourgPublicHoliday.StStephen(System.Int32)">
            <summary>
            Stiefesdag - St Stephen's Day
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.LuxembourgPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.LuxembourgPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Lëtzebuergesch.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.LuxembourgPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.MontenegroPublicHoliday">
            <summary>
            Holidays in Montenegro
            https://www.gov.me/en/documents/927f23a3-db4e-4f65-9f29-ce3c9dde0c90
            </summary>
            <seealso cref="T:PublicHoliday.PublicHolidayBase" />
        </member>
        <member name="M:PublicHoliday.MontenegroPublicHoliday.NewYearFirst(System.Int32)">
            <summary>
            New Year's Day.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.MontenegroPublicHoliday.NewYearSecond(System.Int32)">
            <summary>
            New Year's Day.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.MontenegroPublicHoliday.ChristmasEve(System.Int32)">
            <summary>
            Christmas Eve
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.MontenegroPublicHoliday.Christmas(System.Int32)">
            <summary>
            Christmas.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.MontenegroPublicHoliday.IndependenceDayFirst(System.Int32)">
            <summary>
            Independence Day.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.MontenegroPublicHoliday.IndependenceDaySecond(System.Int32)">
            <summary>
            Independence Day.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.MontenegroPublicHoliday.GoodFriday(System.Int32)">
            <summary>
            Good Friday - Friday before Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.MontenegroPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Easter Monday 1st Monday after Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.MontenegroPublicHoliday.LabourDayFirst(System.Int32)">
            <summary>
            Labor Day.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.MontenegroPublicHoliday.LabourDaySecond(System.Int32)">
            <summary>
            Labour Day.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.MontenegroPublicHoliday.StatehoodDayFirst(System.Int32)">
            <summary>
            Statehood Day.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.MontenegroPublicHoliday.StatehoodDaySecond(System.Int32)">
            <summary>
            Statehood Day.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.MontenegroPublicHoliday.NegoshevDay(System.Int32)">
            <summary>
            Negoshev Day.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.MontenegroPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.MontenegroPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Montenegro.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.MontenegroPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.NewZealandPublicHoliday">
            <summary>
            New Zealand Public Holidays: https://www.govt.nz/browse/work/public-holidays-and-work-2/public-holidays-and-anniversary-dates/
            </summary>
        </member>
        <member name="P:PublicHoliday.NewZealandPublicHoliday.ProvincialDistrict">
            <summary>
            Gets or sets the provincial district
            </summary>
        </member>
        <member name="T:PublicHoliday.NewZealandPublicHoliday.ProvincialDistricts">
            <summary>
            For determining provincial district anniversary days
            </summary>
        </member>
        <member name="F:PublicHoliday.NewZealandPublicHoliday.ProvincialDistricts.ALL">
            <summary>
            All of NZ
            </summary>
        </member>
        <member name="F:PublicHoliday.NewZealandPublicHoliday.ProvincialDistricts.NORTHLAND">
            <summary>
            Northland
            </summary>
        </member>
        <member name="F:PublicHoliday.NewZealandPublicHoliday.ProvincialDistricts.AUCKLAND">
            <summary>
            Auckland
            </summary>
        </member>
        <member name="F:PublicHoliday.NewZealandPublicHoliday.ProvincialDistricts.TARANAKI">
            <summary>
            Taranaki
            </summary>
        </member>
        <member name="F:PublicHoliday.NewZealandPublicHoliday.ProvincialDistricts.HAWKES_BAY">
            <summary>
            Hawkes' Bay
            </summary>
        </member>
        <member name="F:PublicHoliday.NewZealandPublicHoliday.ProvincialDistricts.WELLINGTON">
            <summary>
            Wellington
            </summary>
        </member>
        <member name="F:PublicHoliday.NewZealandPublicHoliday.ProvincialDistricts.MARLBOROUGH">
            <summary>
            Marlborough
            </summary>
        </member>
        <member name="F:PublicHoliday.NewZealandPublicHoliday.ProvincialDistricts.NELSON">
            <summary>
            Nelson
            </summary>
        </member>
        <member name="F:PublicHoliday.NewZealandPublicHoliday.ProvincialDistricts.CANTERBURY">
            <summary>
            Canterbury
            </summary>
        </member>
        <member name="F:PublicHoliday.NewZealandPublicHoliday.ProvincialDistricts.SOUTH_CANTERBURY">
            <summary>
            South Canterbury
            </summary>
        </member>
        <member name="F:PublicHoliday.NewZealandPublicHoliday.ProvincialDistricts.WESTLAND">
            <summary>
            Westland
            </summary>
        </member>
        <member name="F:PublicHoliday.NewZealandPublicHoliday.ProvincialDistricts.OTAGO">
            <summary>
            Otago
            </summary>
        </member>
        <member name="F:PublicHoliday.NewZealandPublicHoliday.ProvincialDistricts.SOUTHLAND">
            <summary>
            Southland
            </summary>
        </member>
        <member name="F:PublicHoliday.NewZealandPublicHoliday.ProvincialDistricts.CHATHAM_ISLANDS">
            <summary>
            Chatham Islands
            </summary>
        </member>
        <member name="M:PublicHoliday.NewZealandPublicHoliday.NewYear(System.Int32)">
            <summary>
            New Year's Day
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.NewZealandPublicHoliday.DayAfterNewYear(System.Int32)">
            <summary>
            Day After New Year's Day
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.NewZealandPublicHoliday.WaitangiDay(System.Int32)">
            <summary>
            Waitangi Day - 6th February
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.NewZealandPublicHoliday.GoodFriday(System.Int32)">
            <summary>
            Good Friday (Friday before Easter)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.NewZealandPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Easter Monday
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.NewZealandPublicHoliday.AnzacDay(System.Int32)">
            <summary>
            ANZAC day, 25th April.
            Unless it falls on a weekend and then it becomes a Monday holiday.
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.NewZealandPublicHoliday.QueenBirthday(System.Int32)">
            <summary>
            Queen's Birthday - first Monday in June (from 2023 <see cref="M:PublicHoliday.NewZealandPublicHoliday.KingBirthday(System.Int32)"/>; retained for API backwards compatibility)
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.NewZealandPublicHoliday.KingBirthday(System.Int32)">
            <summary>
            King's Birthday - first Monday in June (before 2023 <see cref="M:PublicHoliday.NewZealandPublicHoliday.QueenBirthday(System.Int32)"/>)
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.NewZealandPublicHoliday.LabourDay(System.Int32)">
            <summary>
            Labour Day - 4th Monday in October
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.NewZealandPublicHoliday.Christmas(System.Int32)">
            <summary>
            Christmas
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.NewZealandPublicHoliday.BoxingDay(System.Int32)">
            <summary>
            Boxing Day
            </summary>
            <remarks>
            If boxing day lands on a Sunday then the public holiday must be observed on the following Tuesday.
            So xmas and boxing days can be both Saturday and Sunday, followed by public holidays for both Monday and Tuesday.
            </remarks>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.NewZealandPublicHoliday.Matariki(System.Int32)">
            <summary>
            Matariki - https://www.beehive.govt.nz/release/matariki-holiday-dates-next-thirty-years-announced
            </summary>
            <param name="year">The year to check</param>
            <returns>The date of Matariki, if there is one defined</returns>
        </member>
        <member name="M:PublicHoliday.NewZealandPublicHoliday.ProvincialAnniversary(System.Int32,PublicHoliday.NewZealandPublicHoliday.ProvincialDistricts)">
            <summary>
            Determine provincial anniversary day
            </summary>
            <param name="year">The requested year</param>
            <param name="district">The requested provincial district</param>
            <returns>The anniversary day</returns>
        </member>
        <member name="M:PublicHoliday.NewZealandPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.NewZealandPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Get a list of dates with names for all holidays in a year.
            </summary>
            <param name="year">The year.</param>
            <returns>
            Dictionary of bank holidays
            </returns>
        </member>
        <member name="M:PublicHoliday.NewZealandPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the <see cref="M:PublicHoliday.NewZealandPublicHoliday.PublicHolidays(System.Int32)" /> list is more efficient for repeated checks
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>
            True if date is a public holiday (excluding weekends)
            </returns>
        </member>
        <member name="T:PublicHoliday.NorwayPublicHoliday">
            <summary>
            Holidays in Norway
            </summary>
            <seealso cref="T:PublicHoliday.PublicHolidayBase" />
        </member>
        <member name="M:PublicHoliday.NorwayPublicHoliday.NewYear(System.Int32)">
            <summary>
            New Year's Day January 1
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.NorwayPublicHoliday.MaundyThursday(System.Int32)">
            <summary>
            Maundy Thursday - Thursday before Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.NorwayPublicHoliday.GoodFriday(System.Int32)">
            <summary>
            Good Friday - Friday before Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.NorwayPublicHoliday.Easter(System.Int32)">
            <summary>
            Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.NorwayPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Easter Monday 1st Monday after Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.NorwayPublicHoliday.LabourDay(System.Int32)">
            <summary>
            Labour Day - Mai 1st
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.NorwayPublicHoliday.ConstitutionDay(System.Int32)">
            <summary>
            Constitution Day - Mai 17th
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.NorwayPublicHoliday.Ascension(System.Int32)">
            <summary>
            Ascension 6th Thursday after Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.NorwayPublicHoliday.WhitSunday(System.Int32)">
            <summary>
            Whit Monday - 7th Sunday after Easter
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.NorwayPublicHoliday.WhitMonday(System.Int32)">
            <summary>
            Whit Monday - 7th Monday after Easter
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.NorwayPublicHoliday.Christmas(System.Int32)">
            <summary>
            Christmas - December 25
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.NorwayPublicHoliday.BoxingDay(System.Int32)">
            <summary>
            Boxing Day - December 26
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.NorwayPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.NorwayPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Norwegian.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.NorwayPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.PolandPublicHoliday">
            <summary>
            Holidays in Poland
            </summary>
        </member>
        <member name="M:PublicHoliday.PolandPublicHoliday.NewYear(System.Int32)">
            <summary>
            Nowy Rok - New Year's Day
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.PolandPublicHoliday.Epiphany(System.Int32)">
            <summary>
            Swieto Trzech Króli - Epiphany January 6
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.PolandPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Poniedzialek Wielkanocny - Easter Monday
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.PolandPublicHoliday.LabourDay(System.Int32)">
            <summary>
            Swieto Panstwowe - Labour Day
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.PolandPublicHoliday.ConstitutionDay(System.Int32)">
            <summary>
            Swieto Narodowe Trzeciego Maja - Constitution Day
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.PolandPublicHoliday.CorpusChristi(System.Int32)">
            <summary>
            dzien Bozego Ciala - CorpusChristi
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.PolandPublicHoliday.Assumption(System.Int32)">
            <summary>
            Wniebowziecie Najswietszej Maryi Panny - Assumption of Mary
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.PolandPublicHoliday.AllSaints(System.Int32)">
            <summary>
            Wszystkich Swietych - All Saints
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.PolandPublicHoliday.IndependenceDay(System.Int32)">
            <summary>
            Narodowe Swieto Niepodleglosci - Independence Day
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.PolandPublicHoliday.Christmas(System.Int32)">
            <summary>
            pierwszy dzien Bozego Narodzenia - 1st day of Christmas
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PolandPublicHoliday.StStephen(System.Int32)">
            <summary>
            drugi dzien Bozego Narodzenia - 2nd day of Christmas
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PolandPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.PolandPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Polish.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PolandPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.PortugalPublicHoliday">
            <summary>
            Portugal public holidays. Set <see cref="P:PublicHoliday.PortugalPublicHoliday.Region"/> for autonomous regions.
            </summary>
        </member>
        <member name="P:PublicHoliday.PortugalPublicHoliday.Region">
            <summary>
            Gets or sets the regions/collectivities concerned with special public holidays
            </summary>
            <remarks>
            Strictly Easter Sunday is also a public holiday
            </remarks>
        </member>
        <member name="T:PublicHoliday.PortugalPublicHoliday.Regions">
            <summary>
            Continental Portugal and autonomous regions (região Autónoma)
            </summary>
        </member>
        <member name="F:PublicHoliday.PortugalPublicHoliday.Regions.OnlyOfficial">
            <summary>
            All regions
            </summary>
        </member>
        <member name="F:PublicHoliday.PortugalPublicHoliday.Regions.Madeira">
            <summary>
             Madeira
            </summary>
        </member>
        <member name="F:PublicHoliday.PortugalPublicHoliday.Regions.Acores">
            <summary>
             Açores
            </summary>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.NewYear(System.Int32)">
            <summary>
            New Year's Day - January 1 - Ano Novo
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.Carnival(System.Int32)">
            <summary>
            Carnival - March 4 - Carnaval
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.GoodFriday(System.Int32)">
            <summary>
            Good Friday - Friday before Easter - Sexta-feira Santa
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.Easter(System.Int32)">
            <summary>
            Easter - Páscoa
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.FreedomDay(System.Int32)">
            <summary>
            Freedom day - Avril 25 - Dia da Liberdade
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.LabourDay(System.Int32)">
            <summary>
            Labour Day - May 1 - Dia do Trabalhador
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.AzoresDay(System.Int32)">
            <summary>
            Azores Days - Pentecost Monday 7th Monday after Easter - Dia dos Açores
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="P:PublicHoliday.PortugalPublicHoliday.HasAzoresDay">
            <summary>
            Whether this region observes First Octave Day
            </summary>
            <value>
            <c>true</c> if this region observes First Octave Day; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.CorpusChristi(System.Int32)">
            <summary>
            Corpus Christi - Date varies(celebrated on the Thursday after Trinity Sunday, honoring the Eucharist) - Corpo de Deus
            </summary>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.MadeiraAutonomyDay(System.Int32)">
            <summary>
            Madeira Autonomy Day - July 1 - Dia da Madeira
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="P:PublicHoliday.PortugalPublicHoliday.HasMadeiraAutonomyDay">
            <summary>
            Whether this region observes Madeira Autonomy Day
            </summary>
            <value>
            <c>true</c> if this region observes Madeira Autonomy Day; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.PortugalDay(System.Int32)">
            <summary>
            Portugal Day - June 10 - Dia de Portugal, de Camões e das Comunidades Portuguesas
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.Assumption(System.Int32)">
            <summary>
            Assumption of Mary - August 15 - Assunção de Nossa Senhora
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.RepublicDay(System.Int32)">
            <summary>
            Republic Day - October 5 - Implantação da República
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.AllSaints(System.Int32)">
            <summary>
            All Saints November 1 - Dia de Todos-os-Santos 
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.IndependenceRestorationDay(System.Int32)">
            <summary>
            Independence Restoration Day - December 1 - Restauração da Independência
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.ImmaculateConception(System.Int32)">
            <summary>
            Immaculate Conception Day - December 8 - Imaculada Conceição
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.Christmas(System.Int32)">
            <summary>
            Christmas December 25  - Noël
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.FirstOctaveDay(System.Int32)">
            <summary>
            First Octave day the 26th of december. Only in Madeira region from 2022
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.PortugalPublicHoliday.HasFirstOctaveDay">
            <summary>
            Whether this region observes First Octave Day
            </summary>
            <value>
            <c>true</c> if this region observes First Octave Day; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Portuguese.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="M:PublicHoliday.PortugalPublicHoliday.PublicHolidaysInformation(System.Int32)">
            <summary>
            Gets the list of all public holidays with details of the cantons in the Holiday object, 
            if it's public the variable isPublic is set to true.
            </summary>
            <param name="year">The given year</param>
            <returns></returns>
        </member>
        <member name="T:PublicHoliday.PublicHolidayBase">
            <summary>
            Public Holiday operations
            </summary>
            <seealso cref="T:PublicHoliday.IPublicHolidays" />
        </member>
        <member name="P:PublicHoliday.PublicHolidayBase.UseCachingHolidays">
            <summary>
            Determines whether to use the cache if available
            </summary>
        </member>
        <member name="F:PublicHoliday.PublicHolidayBase._cacheHolidays">
            <summary>
            Cache by year of holidays for performance.
            </summary>
        </member>
        <member name="M:PublicHoliday.PublicHolidayBase.IsWorkingDay">
            <summary>
            Returns whether todays date is a working day
            </summary>
            <returns>A boolean of whether today is a working day</returns>
        </member>
        <member name="M:PublicHoliday.PublicHolidayBase.IsWorkingDay(System.DateTime)">
            <summary>
            Returns whether the specified date is a working day
            </summary>
            <param name="dt">The date to be checked</param>
            <returns>Returns a boolean of whether the specified date is a working day</returns>
        </member>
        <member name="M:PublicHoliday.PublicHolidayBase.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.PublicHolidayBase.PublicHolidaysInformation(System.Int32)">
            <summary>
            Returns observed and holiday dates for all holidays
            </summary>
            <param name="year">The current year</param>
            <returns>A list of observed holidays</returns>
        </member>
        <member name="M:PublicHoliday.PublicHolidayBase.PublicHolidayNames(System.Int32)">
            <summary>
            Get a list of dates with names for all holidays in a year.
            </summary>
            <param name="year">The year.</param>
            <returns>
            Dictionary of bank holidays
            </returns>
        </member>
        <member name="M:PublicHoliday.PublicHolidayBase.NextWorkingDay(System.DateTime)">
            <summary>
            Returns the next working day (Mon-Fri, not public holiday)
            after the specified date (or the same date)
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>A date that is a working day</returns>
        </member>
        <member name="M:PublicHoliday.PublicHolidayBase.NextWorkingDayNotSameDay(System.DateTime)">
            <summary>
            Returns the next working day (Mon-Fri, not public holiday)
            after the specified date (not the same date)
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>A date that is a working day</returns>
        </member>
        <member name="M:PublicHoliday.PublicHolidayBase.NextWorkingDay(System.DateTime,System.Int32)">
            <summary>
            Returns the next working day (Mon-Fri, not public holiday)
            after x day of the specified date (or the same date)
            </summary>
            <param name="dt">The date you wish to check</param>
            <param name="openDayAdd">The number of open day to add</param>
            <returns>A date that is a working day</returns>
        </member>
        <member name="M:PublicHoliday.PublicHolidayBase.NextWorkingDayNotSameDay(System.DateTime,System.Int32)">
            <summary>
            Returns the next working day (Mon-Fri, not public holiday)
            after x day of the specified date (not the same date)
            </summary>
            <param name="dt">The date you wish to check</param>
            <param name="openDayAdd">The number of open day to add</param>
            <returns>A date that is a working day</returns>
        </member>
        <member name="M:PublicHoliday.PublicHolidayBase.PreviousWorkingDay(System.DateTime)">
            <summary>
            Returns the previous working day (Mon-Fri, not public holiday)
            before the specified date (or the same date)
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>A date that is a working day</returns>
        </member>
        <member name="M:PublicHoliday.PublicHolidayBase.PreviousWorkingDayNotSameDay(System.DateTime)">
            <summary>
            Returns the previous working day (Mon-Fri, not public holiday)
            before the specified date (not the same date)
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>A date that is a working day</returns>
        </member>
        <member name="M:PublicHoliday.PublicHolidayBase.PreviousWorkingDay(System.DateTime,System.Int32)">
            <summary>
            Returns the previous working day (Mon-Fri, not public holiday)
            before x day of the specified date (or the same date)
            </summary>
            <param name="dt">The date you wish to check</param>
            <param name="openDaySubstract">The number of open day to substract</param>
            <returns>A date that is a working day</returns>
        </member>
        <member name="M:PublicHoliday.PublicHolidayBase.PreviousWorkingDayNotSameDay(System.DateTime,System.Int32)">
            <summary>
            Returns the previous working day (Mon-Fri, not public holiday)
            before x day of the specified date (not the same date)
            </summary>
            <param name="dt">The date you wish to check</param>
            <param name="openDaySubstract">The number of open day to substract</param>
            <returns>A date that is a working day</returns>
        </member>
        <member name="M:PublicHoliday.PublicHolidayBase.GetHolidaysInDateRange(System.DateTime,System.DateTime)">
            <summary>
            Gets Holidays between two date times.
            </summary>
            <param name="startDate">The beginning of the date range</param>
            <param name="endDate">The end of the date range</param>
            <returns>A list of holidays between the two dates</returns>
        </member>
        <member name="M:PublicHoliday.PublicHolidayBase.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the <see cref="M:PublicHoliday.PublicHolidayBase.PublicHolidays(System.Int32)" /> list is more efficient for repeated checks
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>
            True if date is a public holiday (excluding weekends)
            </returns>
        </member>
        <member name="T:PublicHoliday.RomanianPublicHoliday">
            <summary>
            Holidays in Romanian. Source https://en.wikipedia.org/wiki/Public_holidays_in_Romania
            </summary>
        </member>
        <member name="M:PublicHoliday.RomanianPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.RomanianPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Romanian.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.RomanianPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="M:PublicHoliday.RomanianPublicHoliday.NewYear(System.Int32)">
            <summary>
            New Year (Anul nou)
            </summary>
            <param name="year">The year</param>
            <returns>Dates of given year</returns>
        </member>
        <member name="M:PublicHoliday.RomanianPublicHoliday.Epiphany(System.Int32)">
            <summary>
            Epiphany (Bobotează). Public holiday starting with 2024
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.RomanianPublicHoliday.SaintJohnTheBaptist(System.Int32)">
            <summary>
            Saint John the Baptist (Sfântul Ion). Public holiday starting with 2024
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.RomanianPublicHoliday.UnificationOfPrincipalities(System.Int32)">
            <summary>
            Day of the Unification of the Romanian Principalities (Unirea Principatelor Române)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.RomanianPublicHoliday.EasterFriday(System.DateTime)">
            <summary>
            Easter Orthodox Good Friday (Vinerea Mare)
            </summary>
            <param name="easter">The easter date</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.RomanianPublicHoliday.EasterMonday(System.DateTime)">
            <summary>
            Easter Monday
            </summary>
            <param name="easter">The easter date</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.RomanianPublicHoliday.LabourDay(System.Int32)">
            <summary>
            International Labour Day (Ziua Muncii)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.RomanianPublicHoliday.ChildrenDay(System.Int32)">
            <summary>
            Children Day (Ziua Copilului). Public holiday starting with 2017
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.RomanianPublicHoliday.WhitMonday(System.DateTime)">
            <summary>
            Easter Whit Monday (Rusaliile). 49 - Sunday (Descent of the Holy Spirit), 50 - Monday
            </summary>
            <param name="easter"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.RomanianPublicHoliday.SaintMaryDay(System.Int32)">
            <summary>
            St Mary's Day (Adormirea Maicii Domnului/Sfânta Maria Mare)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.RomanianPublicHoliday.SaintAndrewDay(System.Int32)">
            <summary>
            St. Andrew's Day (Sfântul Andrei)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.RomanianPublicHoliday.NationalDay(System.Int32)">
            <summary>
            National Day of Romania (Ziua Națională a României)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.RomanianPublicHoliday.ChristmasDay(System.Int32)">
            <summary>
            Christmas Day (Crăciunul)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="T:PublicHoliday.SerbianPublicHoliday">
            <summary>
            Holidays in Serbia
            Taken from official government page https://neradni-dani.com/kalendar-2023-srb.php
            </summary>
            <seealso cref="T:PublicHoliday.PublicHolidayBase" />
        </member>
        <member name="M:PublicHoliday.SerbianPublicHoliday.NewYearFirst(System.Int32)">
            <summary>
            New Year's Day.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SerbianPublicHoliday.NewYearSecond(System.Int32)">
            <summary>
            New Year's Day.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SerbianPublicHoliday.Christmas(System.Int32)">
            <summary>
            Christmas.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SerbianPublicHoliday.NationalDayFirst(System.Int32)">
            <summary>
            National Day.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SerbianPublicHoliday.NationalDaySecond(System.Int32)">
            <summary>
            National Day.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SerbianPublicHoliday.GoodFriday(System.Int32)">
            <summary>
            Good Friday - Friday before Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SerbianPublicHoliday.Easter(System.Int32)">
            <summary>
            Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SerbianPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Easter Monday 1st Monday after Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SerbianPublicHoliday.LabourDayFirst(System.Int32)">
            <summary>
            Labor Day.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SerbianPublicHoliday.LabourDaySecond(System.Int32)">
            <summary>
            Labour Day.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SerbianPublicHoliday.ArmisticeDay(System.Int32)">
            <summary>
            Armistice Day.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SerbianPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.SerbianPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Serbia.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SerbianPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.SlovakiaPublicHoliday">
            <summary>
            Holidays in Slovakia
            English translations and remarks used from: https://en.wikipedia.org/wiki/Public_holidays_in_Slovakia
            Slovak names used also from other sites
            verified from "holiday law": Zákon č. 241/1993 Z. z. Zákon Národnej rady Slovenskej republiky o štátnych sviatkoch, dňoch pracovného pokoja a pamätných dňoch
            available here: http://www.zakonypreludi.sk/zz/1993-241
            also from historical "holiday law" during Czechoslovakia 
            </summary>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.NewYear(System.Int32)">
            <summary>
            Nový rok - New Year's Day
            until 1993, since 1994 there is a different public holiday
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.EstablishmentDay(System.Int32)">
            <summary>
            Deň vzniku Slovenskej republiky - Day of the Establishment of the Slovak Republic
            Czechoslovakia split into the Czech Republic and Slovakia
            since 1994, before 1993 the name was New Year's Day
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.Epiphany(System.Int32)">
            <summary>
            Zjavenie Pána (Traja králi) - Epiphany (The Three Magi)
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.GoodFriday(System.Int32)">
            <summary>
            Veľký piatok - Good Friday
            valid since 1994, before that only Easter Monday was a public holiday
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Veľkonočný pondelok - Easter Monday
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.WorkersDay(System.Int32)">
            <summary>
            Sviatok práce - International Workers' Day
            historical sources say it was introduced in 1919, in this class it will be valid for all years
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.VictoryWWIIDay(System.Int32)">
            <summary>
            Deň víťazstva nad fašizmom - Day of victory over fascism
            The end of World War II in Europe; initially celebrated one day later
            valid since 1992
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.LiberationDay(System.Int32)">
            <summary>
            Výročie oslobodenia Československa Sovietskou armádou - Day of liberation of Czechoslovakia by Soviet army
            The end of World War II in Europe; initially celebrated on this day (because in Moscow time it was on 9th May)
            introduced in 1952 (by law 93/1951), valid until 1991
            source: Zákon č. 93/1951 Zb.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.CyrilAndMethodius(System.Int32)">
            <summary>
            Sviatok svätého Cyrila a Metoda - St. Cyril and Methodius Day
            Slavic missionaries Cyril (Constantine) and Metod (Methodius) came to Great Moravia (see also Glagolitic alphabet)
            during the communist era it was cancelled (since 1952), reintroduced again in 1990
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.SNP(System.Int32)">
            <summary>
            Výročie Slovenského národného povstania (SNP) - Slovak National Uprising anniversary
            The Slovaks rose up against Nazi Germany
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.ConstitutionDay(System.Int32)">
            <summary>
            Deň Ústavy Slovenskej republiky - Day of the Constitution of the Slovak Republic
            The constitution of (future) independent Slovakia was adopted in Bratislava
            introduced by law since 1994
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.LadySevenSorrows(System.Int32)">
            <summary>
            Sviatok Panny Márie Sedembolestnej, patrónky Slovenska - Day of Our Lady of the Seven Sorrows, patron saint of Slovakia
            The Patron saint of Slovakia is Our Lady of the Seven Sorrows
            introduced in law since 1994
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.NationalizationDay(System.Int32)">
            <summary>
            Deň znárodnenia - Nationalization Day
            Old public holiday during the communist era: 1952-1974
            introduced in 1952 (by law 93/1951), cancelled in 1975 (last holiday was 1974)
            source: Zákon č. 93/1951 Zb.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.IndependentCzechoSlovakiaDay(System.Int32)">
            <summary>
            Deň vzniku samostatného česko-slovenského štátu - Day of Establishment of Independent Czecho-Slovak state
            Old public holiday during the communist era and few years after Velvet revolution: 1988-1993
            introduced in 1988 (by modification of law 93/1951, by: Opatrenie č. 141/1988 Zb. valid from 21st September 1988)
            cancelled in 1994 by introducing a new law (last holiday was in 1993)
            source: Zákon č. 93/1951 Zb.
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.AllSaints(System.Int32)">
            <summary>
            Sviatok všetkých svätých - All Saints’ Day
            Cemeteries are visited on or around this day
            introduced by law in 1994, before that it was cancelled during the communist era but probably was a public holiday in older times before the communism era
            in this class it will be valid until 1951, since 1994 and won't be present between 1951 and 1993
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.FreedomDemocracyDay(System.Int32)">
            <summary>
            Deň boja za slobodu a demokraciu - Struggle for Freedom and Democracy Day
            Commemorating the student demonstration against Nazi occupation in 1939, 
            and especially the demonstration in 1989 in Bratislava and Prague 
            considered to mark the beginning of the Velvet Revolution.
            valid since 2001 -  law 241/1993 updated by 442/2001, since 15th of November 2001
            (Zákon, ktorým sa mení a dopĺňa zákon Národnej rady Slovenskej republiky č. 241/1993 Z. z. o štátnych sviatkoch, 
             dňoch pracovného pokoja a pamätných dňoch v znení neskorších predpisov)
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.ChristmasEve(System.Int32)">
            <summary>
            Štedrý deň - Christmas Eve
            In Slovakia, Christmas presents are opened in the evening on Christmas Eve
            Valid since 1990, in older years it was not a public holiday
            source: 93/1951 Zb. (modification by 167/1990 Zb.) and 241/1993 Z.z.
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.ChristmasDay(System.Int32)">
            <summary>
            Prvý sviatok vianočný - Christmas Day - 1st day of Christmas
            Literally, First Christmas Holiday
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.StStephenDay(System.Int32)">
            <summary>
            Druhý sviatok vianočný - St. Stephen's Day - 2nd day of Christmas
            Literally, Second Christmas Holiday
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Slovakian.
            Names identical from source: http://kalendar.azet.sk/sviatky/
            for historical sources names are from other sources (mainly from historic law)
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SlovakiaPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.SloveniaPublicHoliday">
            <summary>
            Holidays in Slovenia
            Taken from official government page https://www.gov.si/teme/drzavni-prazniki-in-dela-prosti-dnevi/
            </summary>
        </member>
        <member name="M:PublicHoliday.SloveniaPublicHoliday.NewYearFirst(System.Int32)">
            <summary>
            Novo leto (1. januar) - New Year's Day
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SloveniaPublicHoliday.NewYearSecond(System.Int32)">
            <summary>
            Novo leto (2. januar) - New Year's Day
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SloveniaPublicHoliday.PreserenDay(System.Int32)">
            <summary>
            Prešernov dan - Cultural holiday
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.SloveniaPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Ostermontag - Easter Monday
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SloveniaPublicHoliday.ResistanceAgainstOccupation(System.Int32)">
            <summary>
            Resistance against the occupation
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.SloveniaPublicHoliday.LabourDayFirst(System.Int32)">
            <summary>
            Praznik dela 1.maj - Labour Day 1. may
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.SloveniaPublicHoliday.LabourDaySecond(System.Int32)">
            <summary>
            Praznik dela 2.maj - Labour Day 2. may
            </summary>
            <param name="year">The year.</param>
        </member>
        <member name="M:PublicHoliday.SloveniaPublicHoliday.NationalDay(System.Int32)">
            <summary>
            Dan državnosti - National day
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.SloveniaPublicHoliday.Assumption(System.Int32)">
            <summary>
            Marijino vnebovzetje - Assumption of Mary
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.SloveniaPublicHoliday.ReformationDay(System.Int32)">
            <summary>
            Dan reformacije - Reformation day
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.SloveniaPublicHoliday.AllSaints(System.Int32)">
            <summary>
            Dan spomina na mrtve (Vsi sveti) - All Saints
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.SloveniaPublicHoliday.Christmas(System.Int32)">
            <summary>
            Božič - Christmas
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SloveniaPublicHoliday.UnityDay(System.Int32)">
            <summary>
            Dan samostojnosti in enotnosti - Day of sovereignity and unity
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SloveniaPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.SloveniaPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Slovene.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SloveniaPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.SouthAfricaPublicHoliday">
            <summary>
            Holidays in South Africa https://www.gov.za/about-sa/public-holidays
            </summary>
            <remarks>
            Missing because no fixed date: 
            </remarks>
        </member>
        <member name="M:PublicHoliday.SouthAfricaPublicHoliday.NewYear(System.Int32)">
            <summary>
            New Year's Day
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SouthAfricaPublicHoliday.HumanRightsDay(System.Int32)">
            <summary>
            Human Rights Day March 21
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.SouthAfricaPublicHoliday.GoodFriday(System.Int32)">
            <summary>
            Good Friday (Friday before Easter)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SouthAfricaPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Easter Monday/Family Day
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SouthAfricaPublicHoliday.FreedomDay(System.Int32)">
            <summary>
            Freedom Day April 27
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.SouthAfricaPublicHoliday.LabourDay(System.Int32)">
            <summary>
            International Labour Day/Workers' Day May 1
            </summary>
            <param name="year">The year.</param>
            
        </member>
        <member name="M:PublicHoliday.SouthAfricaPublicHoliday.YouthDay(System.Int32)">
            <summary>
            Soweto Day/Youth Day June 16
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.SouthAfricaPublicHoliday.NationalWomensDay(System.Int32)">
            <summary>
            National Women's Day August 9
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.SouthAfricaPublicHoliday.HeritageDay(System.Int32)">
            <summary>
            Heritage Day September 24
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.SouthAfricaPublicHoliday.ReconciliationDay(System.Int32)">
            <summary>
            Day of Reconciliation September 24
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.SouthAfricaPublicHoliday.Christmas(System.Int32)">
            <summary>
            Christmas
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SouthAfricaPublicHoliday.BoxingDay(System.Int32)">
            <summary>
            Boxing Day
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SouthAfricaPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.SouthAfricaPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Lëtzebuergesch.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SouthAfricaPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.SpainPublicHoliday">
            <summary>
            Finds Spanish public holidays.
            Public holidays on Sundays are not deferred to following weekday automatically-
            they may be taken at an arbitary date.
            </summary>
            <remarks>
            - We don't infer bridge days for holidays on Tues/Thurs.
            - We don't have regional holidays
            </remarks>
        </member>
        <member name="M:PublicHoliday.SpainPublicHoliday.NewYear(System.Int32)">
            <summary>
            New Year's Day January 1 Año Nuevo
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SpainPublicHoliday.Epiphany(System.Int32)">
            <summary>
            Epiphany January 6 	Día de Reyes / Epifanía del Señor
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SpainPublicHoliday.GoodFriday(System.Int32)">
            <summary>
            Good Friday (Friday before Easter) Viernes Santo
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SpainPublicHoliday.MayDay(System.Int32)">
            <summary>
            Labor Day May 1 Día del Trabajador.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SpainPublicHoliday.Assumption(System.Int32)">
            <summary>
            Assumption of Mary August 15- Asunción
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SpainPublicHoliday.NationalDay(System.Int32)">
            <summary>
            National day, October 12 Fiesta Nacional de España
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SpainPublicHoliday.AllSaints(System.Int32)">
            <summary>
            All Saints November 1 Día de todos los Santos
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SpainPublicHoliday.ConstitutionDay(System.Int32)">
            <summary>
            Constitution day, Dec 6 Día de la Constitución
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SpainPublicHoliday.ImmaculateConception(System.Int32)">
            <summary>
            Immaculate Conception, Dec 8 - Inmaculada Concepción
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SpainPublicHoliday.Christmas(System.Int32)">
            <summary>
            Christmas December 25  Navidad
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SpainPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.SpainPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Spanish.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SpainPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            Note holidays can fall on weekends and there is no fixed moving of such dates.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.SwedenPublicHoliday">
            <summary>
            Swedish public holidays
            </summary>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.NewYear(System.Int32)">
            <summary>
            New Year's Day January 1
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.Epiphany(System.Int32)">
            <summary>
            Epiphany - 13 days after christmas
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.GoodFriday(System.Int32)">
            <summary>
            Good Friday - Friday before Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.Easter(System.Int32)">
            <summary>
            Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Easter Monday 1st Monday after Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.LabourDay(System.Int32)">
            <summary>
            Labour Day - Mai 1st
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.Ascension(System.Int32)">
            <summary>
            Ascension 6th Thursday after Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.WhitSunday(System.Int32)">
            <summary>
            Whit Sunday - 7th Sunday after Easter
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.NationalDay(System.Int32)">
            <summary>
            National Day - June 6th
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.MidsummerEve(System.Int32)">
            <summary>
            Midsummer eve, first friday after June 19th
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.MidsummerDay(System.Int32)">
            <summary>
            Midsummer day, day after midsummer eve
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.AllSaintsDay(System.Int32)">
            <summary>
            All saints day, day after all saints eve
            First saturday after Oct. 31
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.ChristmasEve(System.Int32)">
            <summary>
            Christmas Eve - December 24
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.Christmas(System.Int32)">
            <summary>
            Christmas - December 25
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.BoxingDay(System.Int32)">
            <summary>
            Boxing Day - December 26
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.NewYearsEve(System.Int32)">
            <summary>
            New Years Eve - December 31
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Swedish.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SwedenPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="T:PublicHoliday.SwitzerlandPublicHoliday">
            <summary>
            Switzerland's holiday calendar. Oliver Fritz, May 2018.
            Updated according to https://en.wikipedia.org/wiki/Public_holidays_in_Switzerland. Christophe Peugnet, April 2024
            </summary>
        </member>
        <member name="P:PublicHoliday.SwitzerlandPublicHoliday.Canton">
            <summary>
            Gets or sets the canton (ISO 3166-2:CH), + default All for all Canton.
            </summary>
        </member>
        <member name="T:PublicHoliday.SwitzerlandPublicHoliday.Cantons">
            <summary>
            List of cantons
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.OnlyOfficial">
            <summary>
            All cantons
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.AG">
            <summary>
             Canton of Aargau
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.AI">
            <summary>
             Appenzell Innerrhoden
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.AR">
            <summary>
             Appenzell Ausserrhoden
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.BL">
            <summary>
             Basel-Landschaft
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.BS">
            <summary>
             Basel-Stadt
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.BE">
            <summary>
             Canton of Bern
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.FR">
            <summary>
             Canton of Fribourg
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.GE">
            <summary>
             Canton of Geneva
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.GL">
            <summary>
             Canton of Glarus
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.GR">
            <summary>
             Grisons
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.JU">
            <summary>
             Canton of Jura
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.LU">
            <summary>
             Canton of Lucerne
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.NE">
            <summary>
             Canton of Neuchâtel
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.NW">
            <summary>
             Nidwalden
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.OW">
            <summary>
             Obwalden
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.SG">
            <summary>
             Canton of St. Gallen
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.SH">
            <summary>
             Canton of Schaffhausen
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.SZ">
            <summary>
             Canton of Schwyz
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.SO">
            <summary>
             Canton of Solothurn
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.TG">
            <summary>
             Thurgau
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.TI">
            <summary>
             Ticino
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.UR">
            <summary>
             Canton of Uri
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.VS">
            <summary>
             Valais
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.VD">
            <summary>
             Vaud
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.ZG">
            <summary>
             Canton of Zug
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.ZH">
            <summary>
             Canton of Zürich
            </summary>
        </member>
        <member name="F:PublicHoliday.SwitzerlandPublicHoliday.Cantons.ALL">
            <summary>
             All Cantons
            </summary>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.NewYear(System.Int32)">
            <summary>
            New Year's Day January 1
            </summary>
            <param name="year">The year.</param>
            <returns>Date of this holiday in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.SecondJanuary(System.Int32)">
            <summary>
            January 2, Berchtoldstag
            </summary>
            <param name="year"></param>
            <returns>Date of this holiday in given year</returns>
        </member>
        <member name="P:PublicHoliday.SwitzerlandPublicHoliday.HasSecondJanuary">
            <summary>
            Whether this cantons observes SecondJanuary
            </summary>
            <value>
            <c>true</c> if this canton observes SecondJanuary; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.Epiphany(System.Int32)">
            <summary>
            Epiphany - 13 days after christmas
            </summary>
            <param name="year">The year.</param>
            <returns>Date of this holiday in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.SwitzerlandPublicHoliday.HasEpiphany">
            <summary>
            Whether this cantons observes Epiphany
            </summary>
            <value>
            <c>true</c> if this canton observes Epiphany; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.RepublicDay(System.Int32)">
            <summary>
            Republic Day Neuchatel - 1. March
            </summary>
            <param name="year">Republic Day of Neuchatel</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.SwitzerlandPublicHoliday.HasRepublicDay">
            <summary>
            Whether this cantons observes RepublicDay
            </summary>
            <value>
            <c>true</c> if this canton observes RepublicDay; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.StJosephDay(System.Int32)">
            <summary>
             St Joseph's Day - 19 March
            </summary>
            <param name="year">St Joseph's Day</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.SwitzerlandPublicHoliday.HasStJosephDay">
            <summary>
            Whether this cantons observes St Joseph's Day
            </summary>
            <value>
            <c>true</c> if this canton observes St Joseph's Day; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.GoodFriday(System.Int32)">
            <summary>
            Good Friday - Friday before Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.SwitzerlandPublicHoliday.HasGoodFriday">
            <summary>
            Whether this cantons observes GoodFriday
            </summary>
            <value>
            <c>true</c> if this canton observes GoodFriday; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.EasterMonday(System.Int32)">
            <summary>
            Easter Monday 1st Monday after Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.SwitzerlandPublicHoliday.HasEasterMonday">
            <summary>
            Whether this cantons observes Easter Monday
            </summary>
            <value>
            <c>true</c> if this canton observes Easter Monday; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.LabourDay(System.Int32)">
            <summary>
            Labour Day - Mai 1st
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="P:PublicHoliday.SwitzerlandPublicHoliday.HasLabourDay">
            <summary>
            Whether this cantons observes Labour Day
            </summary>
            <value>
            <c>true</c> if this canton observes Labour Day; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.Ascension(System.Int32)">
            <summary>
            Ascension 6th Thursday after Easter
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.WhitMonday(System.Int32)">
            <summary>
            Whit Monday - Monday after Whit Sunday
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="P:PublicHoliday.SwitzerlandPublicHoliday.HasWhitMonday">
            <summary>
            Whether this cantons observes Whit Monday
            </summary>
            <value>
            <c>true</c> if this canton observes Whit Monday; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.CorpusChristi(System.Int32)">
            <summary>
            Fronleichnam - Corpus Christi
            </summary>
            <param name="year"></param>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.CorpusChristi(System.DateTime)">
            <summary>
            Fronleichnam - Corpus Christi
            </summary>
            <param name="easter"></param>
            <returns></returns>
        </member>
        <member name="P:PublicHoliday.SwitzerlandPublicHoliday.HasCorpusChristi">
            <summary>
            Whether this cantons observes Corpus Christi
            </summary>
            <value>
            <c>true</c> if this canton observes Corpus Christi; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.NationalDay(System.Int32)">
            <summary>
            National Day - August 1st
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.Assumption(System.Int32)">
            <summary>
            Mariä Himmelfahrt - Assumption of Mary
            </summary>
            <param name="year"></param>
        </member>
        <member name="P:PublicHoliday.SwitzerlandPublicHoliday.HasAssumption">
            <summary>
            Whether this cantons observes Assumption of Mary
            </summary>
            <value>
            <c>true</c> if this canton observes Assumption of Mary; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.GenevaPrayDay(System.Int32)">
            <summary>
            Geneva PrayDay
            Thursday after First Sunday in September
            </summary>
            <param name="year"></param>
        </member>
        <member name="P:PublicHoliday.SwitzerlandPublicHoliday.HasGenevaPrayDay">
            <summary>
            Whether this cantons observes Geneva PrayDay
            </summary>
            <value>
            <c>true</c> if this canton observes Geneva PrayDay; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.AllSaints(System.Int32)">
            <summary>
            Allerheiligen - All Saints
            </summary>
            <param name="year"></param>
        </member>
        <member name="P:PublicHoliday.SwitzerlandPublicHoliday.HasAllSaints">
            <summary>
            Whether this canton observes Allerheiligen
            </summary>
            <value>
            <c>true</c> if this canton observes Allerheiligen; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.ImmaculateConception(System.Int32)">
            <summary>
            Immaculate Conception
            </summary>
            <param name="year"></param>
        </member>
        <member name="P:PublicHoliday.SwitzerlandPublicHoliday.HasImmaculateConception">
            <summary>
            Whether this canton observes Immaculate Conception
            </summary>
            <value>
            <c>true</c> if this canton observes Immaculate Conception; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.Christmas(System.Int32)">
            <summary>
            Christmas - December 25
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.SaintStephensDay(System.Int32)">
            <summary>
            St Stephen's Day - December 26
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="P:PublicHoliday.SwitzerlandPublicHoliday.HasSaintStephensDay">
            <summary>
            Whether this canton observes St Stephen's Day
            </summary>
            <value>
            <c>true</c> if this canton observes St Stephen's Day; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of public holidays</returns>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in German.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.PublicHolidaysInformation(System.Int32)">
            <summary>
            Gets the list of all public holidays with details of the cantons in the Holiday object, 
            if it's public the variable isPublic is set to true.
            </summary>
            <param name="year">The given year</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.SwitzerlandPublicHoliday.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructor for two major Swiss variants: 
            </summary>
            <param name="hasSecondJanuary"></param>
            <param name="hasLaborDay"></param>
            <param name="hasCorpusChristi"></param>
        </member>
        <member name="T:PublicHoliday.TurkeyPublicHoliday">
            <summary>
            Represents holidays in the Turkey
            </summary>
        </member>
        <member name="M:PublicHoliday.TurkeyPublicHoliday.NewYear(System.Int32)">
            <summary>
            New Year's Day - January 1
            </summary>
            <param name="year">The year.</param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.TurkeyPublicHoliday.NationalSovereigntyAndChildrensDay(System.Int32)">
            <summary>
            National Sovereignty and Children's Day - April 23
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.TurkeyPublicHoliday.LabourDay(System.Int32)">
            <summary>
            Labour and Solidarity - Day May 1
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.TurkeyPublicHoliday.RamadanFirstDay(System.Int32)">
            <summary>
            Ramadan Holiday - 1st Day
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.TurkeyPublicHoliday.RamadanSecondDay(System.Int32)">
            <summary>
            Ramadan Holiday - 2nd Day
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.TurkeyPublicHoliday.RamadanThirdDay(System.Int32)">
            <summary>
             Ramadan Holiday - 3rd Day
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.TurkeyPublicHoliday.YouthAndSportsDay(System.Int32)">
            <summary>
             Youth And Sports Day - May 19
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.TurkeyPublicHoliday.FeastOfSacrificesFirstDay(System.Int32)">
            <summary>
             Feast of Sacrifice First Day
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.TurkeyPublicHoliday.FeastOfSacrificesSecondDay(System.Int32)">
            <summary>
             Feast of Sacrifice Second Day
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.TurkeyPublicHoliday.FeastOfSacrificesThirdDay(System.Int32)">
            <summary>
             Feast of Sacrifice Third Day
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.TurkeyPublicHoliday.FeastOfSacrificesFourthdDay(System.Int32)">
            <summary>
             Feast of Sacrifice Fourth Day
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.TurkeyPublicHoliday.DemocracyAndNationalUnityDay(System.Int32)">
            <summary>
            Democracy and National Unity Day - Jul 15
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.TurkeyPublicHoliday.VictoryDay(System.Int32)">
            <summary>
            Victory Day - Aug 30
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.TurkeyPublicHoliday.RepublicDay(System.Int32)">
            <summary>
            Republic Day - Oct 29
            </summary>
            <param name="year"></param>
            <returns>Date of in the given year.</returns>
        </member>
        <member name="M:PublicHoliday.TurkeyPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a public holiday</returns>
        </member>
        <member name="M:PublicHoliday.TurkeyPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Public holiday names in Turkey.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.TurkeyPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="T:PublicHoliday.UKBankHoliday">
            <summary>
            Finds UK Bank (public) Holidays. Adjusted for weekends. For Scotland/NorthernIreland variations set <see cref="P:PublicHoliday.UKBankHoliday.UkCountry"/>
            <description>
            UK Bank Holidays since 1971 Banking and Financial Dealings Act with additions and variations.
            See http://www.dti.gov.uk/employment/bank-public-holidays/index.html
            <para>Additions: 1974 New Years Day and 1978 May Day</para>
            <para>Variations: 1995 VE Day May Day, 2002 Golden Jubilee, 2011 Royal Wedding, 2012 Diamond Jubilee</para>
            <para>You can call by IsBankHoliday(date), get the specific holiday name
            ( <see cref="M:PublicHoliday.UKBankHoliday.Christmas(System.Int32)"/>), or a list of dates for the year (<see cref="M:PublicHoliday.UKBankHoliday.BankHolidays(System.Int32)"/>)</para>
            </description>
            </summary>
        </member>
        <member name="P:PublicHoliday.UKBankHoliday.UkCountry">
            <summary>
            Country within the United Kingdom. Default is England (and Wales which is the same legal jurisdiction).
            Change for Scotland and NorthernIreland
            </summary>
        </member>
        <member name="T:PublicHoliday.UKBankHoliday.UkCountries">
            <summary>
            The constituent countries of the United Kingdom. England and Wales are the same legal jurisdiction, but for clarity are shown separately.
            </summary>
        </member>
        <member name="F:PublicHoliday.UKBankHoliday.UkCountries.England">
            <summary>
            England
            </summary>
        </member>
        <member name="F:PublicHoliday.UKBankHoliday.UkCountries.Wales">
            <summary>
            Wales
            </summary>
        </member>
        <member name="F:PublicHoliday.UKBankHoliday.UkCountries.Scotland">
            <summary>
            Scotland
            </summary>
        </member>
        <member name="F:PublicHoliday.UKBankHoliday.UkCountries.NorthernIreland">
            <summary>
            Northern Ireland
            </summary>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.Christmas(System.Int32)">
            <summary>
            Christmas day
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.BoxingDay(System.Int32)">
            <summary>
            Boxing Day
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.NewYear(System.Int32)">
            <summary>
            Date of New Year bank holiday. This is 1974 on only but will return pre 1974 dates.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.NewYearHolidayScotland(System.Int32)">
            <summary>
            Scotland only. Normally January 2nd
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.StPatricksDay(System.Int32)">
            <summary>
            Northern Ireland only. St Patrick's Day, on 17th of March or next Monday if on weekend.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.StAndrews(System.Int32)">
            <summary>
            Scotland only. St Andrew's Day
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.BattleOfTheBoyne(System.Int32)">
            <summary>
            Northern Ireland only. Battle of the Boyne (Orangemen’s Day) on 12th of July or next Monday if on weekend.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.MayDay(System.Int32)">
            <summary>
            Returns "Early Spring"/"May Day" holiday (first Monday in May). Created in 1978.
            </summary>
            <param name="year"></param>
            <returns>(Nullable)date for Early May Bank Holiday (null before 1978)</returns>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.Spring(System.Int32)">
            <summary>
            The Spring/Last Monday in May holiday (replaced variable Whit Monday in 1971)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.SummerScotland(System.Int32)">
            <summary>
            Scotland only. Summer bank holiday (first Monday in August)
            </summary>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.Summer(System.Int32)">
            <summary>
            Summer bank holiday (last Monday in August). Not Scotland.
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.GoodFriday(System.Int32)">
            <summary>
            Good Friday (Friday before Easter)
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.EasterMonday(System.Int32)">
            <summary>
            Easter Monday (Monday after Easter). Not a legal holiday in Scotland, but observed by clearing banks since 1996
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.GoodFriday(System.DateTime)">
            <summary>
            Private overloads of GoodFriday and EasterMonday reusing Easter calculation
            </summary>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.BankHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>List of bank holidays</returns>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year</param>
            <returns>Dictionary of bank holidays</returns>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a public holiday.
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>
            True if date is a bank holiday (excluding weekends)
            </returns>
        </member>
        <member name="M:PublicHoliday.UKBankHoliday.IsBankHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a bank holiday.
            Obviously the BankHoliday list is more efficient for repeated checks
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a bank holiday (excluding weekends)</returns>
        </member>
        <member name="T:PublicHoliday.USAFederalReserveHoliday">
            <summary>
            Federal Reserve Holidays in the US
            <br />
            If a holiday falls on a Saturday the Federal Reserve is open the preceding Friday, this differs from how <see cref="T:PublicHoliday.USAPublicHoliday"></see> treats Fridays preceding a Saturday holiday.
            <br />
            If a holiday falls on a Sunday the Federal Reserve is closed following Monday.
            https://www.federalreserve.gov/aboutthefed/k8.htm
            </summary>
        </member>
        <member name="M:PublicHoliday.USAFederalReserveHoliday.NewYear(System.Int32)">
            <summary>
            New Years Day. Note in 1999 and 2005 it was 31st December
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAFederalReserveHoliday.MartinLutherKing(System.Int32)">
            <summary>
            Third Monday in January
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAFederalReserveHoliday.PresidentsDay(System.Int32)">
            <summary>
            Washington's Birthday aka Presidents Day. Third Monday in February
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAFederalReserveHoliday.MemorialDay(System.Int32)">
            <summary>
            Last Monday in May
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAFederalReserveHoliday.Juneteenth(System.Int32)">
            <summary>
            19th June
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAFederalReserveHoliday.IndependenceDay(System.Int32)">
            <summary>
            Independence Day
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAFederalReserveHoliday.LaborDay(System.Int32)">
            <summary>
            First Monday in September
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAFederalReserveHoliday.ColumbusDay(System.Int32)">
            <summary>
            Second Monday in October
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAFederalReserveHoliday.VeteransDay(System.Int32)">
            <summary>
            11 November
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAFederalReserveHoliday.Thanksgiving(System.Int32)">
            <summary>
            Thanksgiving - Fourth Thursday in November
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAFederalReserveHoliday.Christmas(System.Int32)">
            <summary>
            Christmas Day
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAFederalReserveHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAFederalReserveHoliday.PublicHolidaysInformation(System.Int32)">
            <summary>
            Gets a list of public holidays with their observed and actual date
            </summary>
            <param name="year">The given year</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAFederalReserveHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Get a list of dates with names for all holidays in a year.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAFederalReserveHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a federal holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a federal holiday (excluding weekends)</returns>
        </member>
        <member name="T:PublicHoliday.USANewYorkStockExchangeHoliday">
            <summary>
            Similar to Federal Holidays in the US
            If a holiday falls on a Saturday it is celebrated the preceding Friday;
            if a holiday falls on a Sunday it is celebrated the following Monday.
            https://www.nyse.com/markets/hours-calendars
            Note that this may not be historically accurate prior to 2022. 
            This only captures what the current holiday set is and may not reflect historical holidays.
            </summary>
            <remarks>
            Recommendation to use cache with UseCachingHolidays for performance 
            </remarks>
        </member>
        <member name="M:PublicHoliday.USANewYorkStockExchangeHoliday.NewYear(System.Int32)">
            <summary>
            New Years Day. Note in 1999 and 2005 it was 31st December
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USANewYorkStockExchangeHoliday.MartinLutherKing(System.Int32)">
            <summary>
            Third Monday in January
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USANewYorkStockExchangeHoliday.PresidentsDay(System.Int32)">
            <summary>
            Washington's Birthday aka Presidents Day. Third Monday in February
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USANewYorkStockExchangeHoliday.GoodFriday(System.Int32)">
            <summary>
            Good Friday (Friday before Easter) Viernes Santo
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USANewYorkStockExchangeHoliday.MemorialDay(System.Int32)">
            <summary>
            Last Monday in May
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USANewYorkStockExchangeHoliday.Juneteenth(System.Int32)">
            <summary>
            19th June
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USANewYorkStockExchangeHoliday.IndependenceDay(System.Int32)">
            <summary>
            Independence Day
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USANewYorkStockExchangeHoliday.LaborDay(System.Int32)">
            <summary>
            First Monday in September
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USANewYorkStockExchangeHoliday.Thanksgiving(System.Int32)">
            <summary>
            Thanksgiving - Fourth Thursday in November
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USANewYorkStockExchangeHoliday.Christmas(System.Int32)">
            <summary>
            Christmas Day
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USANewYorkStockExchangeHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USANewYorkStockExchangeHoliday.PublicHolidaysInformation(System.Int32)">
            <summary>
            Gets a list of public holidays with their observed and actual date
            </summary>
            <param name="year">The given year</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USANewYorkStockExchangeHoliday.PublicHolidaysComplete(System.Int32)">
            <summary>
            Gets a list of public holidays with their observed and actual date
            </summary>
            <param name="year">The given year</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USANewYorkStockExchangeHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Get a list of dates with names for all holidays in a year.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USANewYorkStockExchangeHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a federal holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a federal holiday (excluding weekends)</returns>
        </member>
        <member name="T:PublicHoliday.USAPublicHoliday">
            <summary>
            Federal Holidays in the US
            If a holiday falls on a Saturday it is celebrated the preceding Friday;
            if a holiday falls on a Sunday it is celebrated the following Monday.
            </summary>
            <remarks>
            Recommendation to use cache with UseCachingHolidays for performance 
            </remarks>
        </member>
        <member name="M:PublicHoliday.USAPublicHoliday.NewYear(System.Int32)">
            <summary>
            New Years Day. Note in 1999 and 2005 it was 31st December
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAPublicHoliday.MartinLutherKing(System.Int32)">
            <summary>
            Third Monday in January
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAPublicHoliday.PresidentsDay(System.Int32)">
            <summary>
            Washington's Birthday aka Presidents Day. Third Monday in February
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAPublicHoliday.MemorialDay(System.Int32)">
            <summary>
            Last Monday in May
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAPublicHoliday.Juneteenth(System.Int32)">
            <summary>
            19th June
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAPublicHoliday.IndependenceDay(System.Int32)">
            <summary>
            Independence Day
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAPublicHoliday.LaborDay(System.Int32)">
            <summary>
            First Monday in September
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAPublicHoliday.ColumbusDay(System.Int32)">
            <summary>
            Second Monday in October
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAPublicHoliday.VeteransDay(System.Int32)">
            <summary>
            11 November
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAPublicHoliday.Thanksgiving(System.Int32)">
            <summary>
            Thanksgiving - Fourth Thursday in November
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAPublicHoliday.Christmas(System.Int32)">
            <summary>
            Christmas Day
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAPublicHoliday.PublicHolidays(System.Int32)">
            <summary>
            Get a list of dates for all holidays in a year.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAPublicHoliday.PublicHolidaysInformation(System.Int32)">
            <summary>
            Gets a list of public holidays with their observed and actual date
            </summary>
            <param name="year">The given year</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAPublicHoliday.PublicHolidaysComplete(System.Int32)">
            <summary>
            Gets a list of public holidays with their observed and actual date
            </summary>
            <param name="year">The given year</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAPublicHoliday.PublicHolidayNames(System.Int32)">
            <summary>
            Get a list of dates with names for all holidays in a year.
            </summary>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:PublicHoliday.USAPublicHoliday.IsPublicHoliday(System.DateTime)">
            <summary>
            Check if a specific date is a federal holiday.
            Obviously the PublicHoliday list is more efficient for repeated checks
            </summary>
            <param name="dt">The date you wish to check</param>
            <returns>True if date is a federal holiday (excluding weekends)</returns>
        </member>
    </members>
</doc>
